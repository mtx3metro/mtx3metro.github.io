{
  "version": 3,
  "file": "main.js",
  "sources": [
    "lib/mtx3/core/ajax.js",
    "lib/mtx3/core/frame.js",
    "lib/mtx3/interfaces/touch.js",
    "lib/mtx3/core/matrix.js",
    "lib/mtx3/utils/domUtils.js",
    "lib/mtx3/core/touch.js",
    "lib/mtx3/utils/DomUtils.js",
    "lib/mtx3/core/tween.js",
    "lib/mtx3/utils/Utils.js",
    "lib/mtx3/layout/carousel.js",
    "lib/mtx3/core/observe.js",
    "lib/mtx3/mtx3.js",
    "app/views/BaseView.js",
    "app/views/IncidentsView.js",
    "app/views/NavigationView.js",
    "app/views/PredictionView.js",
    "app/views/PredictionGridView.js",
    "app/views/MainView.js",
    "app/views/MapView.js",
    "app/views/MenuView.js",
    "app/models/ModelIncidents.js",
    "app/models/ModelLines.js",
    "app/models/ModelPredictions.js",
    "app/models/ModelStations.js",
    "app/MetroServices.js",
    "app/MetroController.js",
    "main.js"
  ],
  "names": [],
  "mappings": "AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AChDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,AC9DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClBA,ADmBA;AClrJA,ADsJA;ACrrJA,ADsJA;ACrpLA,ADqLA;ACpdA,ADeA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACvxKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACzjTA,ADkTA;ACjlnFA,AD6nFA;AC5nFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA,ADsCA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,ACjFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA",
  "sourcesContent": [
    "/// <reference path=\"../../../../../typings/es6-promise/es6-promise.d.ts\"/>\r\n'use strict';\r\ndefine('lib/mtx3/core/ajax',[\"require\", \"exports\"], function (require, exports) {\r\n    var AjaxStatus;\r\n    (function (AjaxStatus) {\r\n        AjaxStatus[AjaxStatus[\"SUCCESS\"] = 0] = \"SUCCESS\";\r\n        AjaxStatus[AjaxStatus[\"ERROR\"] = 1] = \"ERROR\";\r\n        AjaxStatus[AjaxStatus[\"TIMEOUT\"] = 2] = \"TIMEOUT\";\r\n    })(AjaxStatus || (AjaxStatus = {}));\r\n    var Ajax = (function () {\r\n        function Ajax() {\r\n        }\r\n        Ajax.get = function (url) {\r\n            return new Promise(function (resolve, reject) {\r\n                var req = new XMLHttpRequest();\r\n                req.open('GET', url, true);\r\n                req.timeout = Ajax.TIMEOUT;\r\n                req.ontimeout = function () {\r\n                    reject({ status: AjaxStatus.TIMEOUT, data: {} });\r\n                };\r\n                req.onerror = function (error) {\r\n                    reject({ status: error, data: {} });\r\n                };\r\n                req.onreadystatechange = function () {\r\n                    if (req.readyState === 4) {\r\n                        if (req.status === 200) {\r\n                            try {\r\n                                resolve({ status: AjaxStatus.SUCCESS, data: JSON.parse(req.responseText) });\r\n                            }\r\n                            catch (error) {\r\n                                console.error('Error processing request:', error);\r\n                                reject({ status: AjaxStatus.ERROR, data: {} });\r\n                            }\r\n                        }\r\n                        else {\r\n                            reject({ status: AjaxStatus.ERROR, data: {} });\r\n                        }\r\n                    }\r\n                };\r\n                req.send(null);\r\n            });\r\n        };\r\n        Ajax.TIMEOUT = 30000;\r\n        return Ajax;\r\n    })();\r\n    exports.Ajax = Ajax;\r\n});\r\n//# sourceMappingURL=ajax.js.map;\n",
    "'use strict';\r\ndefine('lib/mtx3/core/frame',[\"require\", \"exports\"], function (require, exports) {\r\n    var Frame = (function () {\r\n        function Frame() {\r\n            var _this = this;\r\n            this.frameCallback = function () {\r\n                var i = _this._queue.length, e, now = Date.now();\r\n                while (i--) {\r\n                    e = _this._queue[i];\r\n                    if (now >= e.t) {\r\n                        if (e.c(now - e.t, false)) {\r\n                            _this._queue.splice(i, 1);\r\n                        }\r\n                    }\r\n                }\r\n                return now;\r\n            };\r\n            this.process = function () {\r\n                _this.frameCallback();\r\n                if (_this._isActive) {\r\n                    _this._frame.call(window, _this.process.bind(_this));\r\n                    _this._isActive = _this._queue.length !== 0;\r\n                }\r\n            };\r\n            this._queue = [];\r\n        }\r\n        Frame.prototype.timer = function (delay, callback) {\r\n            var t, id = Date.now();\r\n            if (!callback) {\r\n                return;\r\n            }\r\n            t = (delay) ? Date.now() + delay : Date.now();\r\n            this._queue.push({ c: callback, t: t, id: id, cancelled: false });\r\n            if (!this._isActive) {\r\n                this._frame = this._frame || Frame.getFrame();\r\n                this._isActive = true;\r\n                this._frame.call(window, this.process.bind(this));\r\n            }\r\n            return id;\r\n        };\r\n        Frame.prototype.stop = function (frameId) {\r\n            var i = this._queue.length, now = Date.now();\r\n            while (i--) {\r\n                if (this._queue[i].id === frameId) {\r\n                    this._queue[i].c(now - this._queue[i].t, true);\r\n                    this._queue.splice(i, 1);\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        Frame.getFrame = function () {\r\n            return ('requestAnimationFrame' in window) ? window.requestAnimationFrame :\r\n                function (cb) {\r\n                    setTimeout(cb, 17);\r\n                };\r\n        };\r\n        return Frame;\r\n    })();\r\n    exports.Frame = Frame;\r\n});\r\n//# sourceMappingURL=frame.js.map;\n",
    "define('lib/mtx3/interfaces/touch',[\"require\", \"exports\"], function (require, exports) {\r\n    (function (TouchDirection) {\r\n        TouchDirection[TouchDirection[\"LEFT\"] = 1] = \"LEFT\";\r\n        TouchDirection[TouchDirection[\"RIGHT\"] = 2] = \"RIGHT\";\r\n        TouchDirection[TouchDirection[\"UP\"] = 3] = \"UP\";\r\n        TouchDirection[TouchDirection[\"DOWN\"] = 4] = \"DOWN\";\r\n        TouchDirection[TouchDirection[\"NONE\"] = 5] = \"NONE\";\r\n    })(exports.TouchDirection || (exports.TouchDirection = {}));\r\n    var TouchDirection = exports.TouchDirection;\r\n    (function (TouchEventType) {\r\n        TouchEventType[TouchEventType[\"START\"] = 1] = \"START\";\r\n        TouchEventType[TouchEventType[\"MOVE\"] = 2] = \"MOVE\";\r\n        TouchEventType[TouchEventType[\"END\"] = 3] = \"END\";\r\n        TouchEventType[TouchEventType[\"CANCEL\"] = 4] = \"CANCEL\";\r\n        TouchEventType[TouchEventType[\"DBLTAP\"] = 5] = \"DBLTAP\";\r\n    })(exports.TouchEventType || (exports.TouchEventType = {}));\r\n    var TouchEventType = exports.TouchEventType;\r\n});\r\n//# sourceMappingURL=touch.js.map;\n",
    "'use strict';\r\ndefine('lib/mtx3/core/matrix',[\"require\", \"exports\"], function (require, exports) {\r\n    var Matrix = (function () {\r\n        function Matrix() {\r\n            function create() {\r\n                return new Float32Array([\r\n                    1, 0, 0, 0,\r\n                    0, 1, 0, 0,\r\n                    0, 0, 1, 0,\r\n                    0, 0, 0, 1\r\n                ]);\r\n            }\r\n            this.m = create();\r\n            this.a = create();\r\n            this.b = create();\r\n        }\r\n        Matrix.prototype.set = function (b, a) {\r\n            b[0] = a[0];\r\n            b[1] = a[4];\r\n            b[2] = a[8];\r\n            b[3] = a[12];\r\n            b[4] = a[1];\r\n            b[5] = a[5];\r\n            b[6] = a[9];\r\n            b[7] = a[13];\r\n            b[8] = a[2];\r\n            b[9] = a[6];\r\n            b[10] = a[10];\r\n            b[11] = a[14];\r\n            b[12] = a[3];\r\n            b[13] = a[7];\r\n            b[14] = a[11];\r\n            b[15] = a[15];\r\n        };\r\n        Matrix.prototype.multiply = function (a, b, res) {\r\n            var aa1 = a[0], aa2 = a[4], aa3 = a[8], aa4 = a[12], ab1 = a[1], ab2 = a[5], ab3 = a[9], ab4 = a[13], ac1 = a[2], ac2 = a[6], ac3 = a[10], ac4 = a[14], ad1 = a[3], ad2 = a[7], ad3 = a[11], ad4 = a[15];\r\n            var ba1 = b[0], ba2 = b[4], ba3 = b[8], ba4 = b[12], bb1 = b[1], bb2 = b[5], bb3 = b[9], bb4 = b[13], bc1 = b[2], bc2 = b[6], bc3 = b[10], bc4 = b[14], bd1 = b[3], bd2 = b[7], bd3 = b[11], bd4 = b[15];\r\n            res[0] = aa1 * ba1 + aa2 * bb1 + aa3 * bc1 + aa4 * bd1;\r\n            res[4] = aa1 * ba2 + aa2 * bb2 + aa3 * bc2 + aa4 * bd2;\r\n            res[8] = aa1 * ba3 + aa2 * bb3 + aa3 * bc3 + aa4 * bd3;\r\n            res[12] = aa1 * ba4 + aa2 * bb4 + aa3 * bc4 + aa4 * bd4;\r\n            res[1] = ab1 * ba1 + ab2 * bb1 + ab3 * bc1 + ab4 * bd1;\r\n            res[5] = ab1 * ba2 + ab2 * bb2 + ab3 * bc2 + ab4 * bd2;\r\n            res[9] = ab1 * ba3 + ab2 * bb3 + ab3 * bc3 + ab4 * bd3;\r\n            res[13] = ab1 * ba4 + ab2 * bb4 + ab3 * bc4 + ab4 * bd4;\r\n            res[2] = ac1 * ba1 + ac2 * bb1 + ac3 * bc1 + ac4 * bd1;\r\n            res[6] = ac1 * ba2 + ac2 * bb2 + ac3 * bc2 + ac4 * bd2;\r\n            res[10] = ac1 * ba3 + ac2 * bb3 + ac3 * bc3 + ac4 * bd3;\r\n            res[14] = ac1 * ba4 + ac2 * bb4 + ac3 * bc4 + ac4 * bd4;\r\n            res[3] = ad1 * ba1 + ad2 * bb1 + ad3 * bc1 + ad4 * bd1;\r\n            res[7] = ad1 * ba2 + ad2 * bb2 + ad3 * bc2 + ad4 * bd2;\r\n            res[11] = ad1 * ba3 + ad2 * bb3 + ad3 * bc3 + ad4 * bd3;\r\n            res[15] = ad1 * ba4 + ad2 * bb4 + ad3 * bc4 + ad4 * bd4;\r\n            return res;\r\n        };\r\n        Matrix.prototype.current = function () {\r\n            return this.m;\r\n        };\r\n        Matrix.prototype.copy = function (a, b) {\r\n            var i = a.length;\r\n            while (i--) {\r\n                b[i] = a[i];\r\n            }\r\n        };\r\n        Matrix.prototype.identity = function () {\r\n            this.set(this.m, new Float32Array([\r\n                1, 0, 0, 0,\r\n                0, 1, 0, 0,\r\n                0, 0, 1, 0,\r\n                0, 0, 0, 1\r\n            ]));\r\n            return this;\r\n        };\r\n        Matrix.prototype.translate = function (v) {\r\n            this.copy(this.m, this.a);\r\n            this.set(this.b, new Float32Array([\r\n                1, 0, 0, v.x,\r\n                0, 1, 0, v.y,\r\n                0, 0, 1, v.z,\r\n                0, 0, 0, 1\r\n            ]));\r\n            this.multiply(this.a, this.b, this.m);\r\n            return this;\r\n        };\r\n        Matrix.prototype.rotateX = function (radians) {\r\n            var c = Math.cos(radians), s = Math.sin(radians);\r\n            this.copy(this.m, this.a);\r\n            this.set(this.b, new Float32Array([\r\n                1, 0, 0, 0,\r\n                0, c, -s, 0,\r\n                0, s, c, 0,\r\n                0, 0, 0, 1\r\n            ]));\r\n            this.multiply(this.a, this.b, this.m);\r\n            return this;\r\n        };\r\n        Matrix.prototype.rotate = function (radians) {\r\n            var c = Math.cos(radians), s = Math.sin(radians);\r\n            this.copy(this.m, this.a);\r\n            this.set(this.b, new Float32Array([\r\n                c, -s, 0, 0,\r\n                s, c, 0, 0,\r\n                0, 0, 1, 0,\r\n                0, 0, 0, 1\r\n            ]));\r\n            this.multiply(this.a, this.b, this.m);\r\n            return this;\r\n        };\r\n        Matrix.prototype.rotateY = function (radians) {\r\n            var c = Math.cos(radians), s = Math.sin(radians);\r\n            this.copy(this.m, this.a);\r\n            this.set(this.b, new Float32Array([\r\n                c, 0, s, 0,\r\n                0, 1, 0, 0,\r\n                -s, 0, c, 0,\r\n                0, 0, 0, 1\r\n            ]));\r\n            this.multiply(this.a, this.b, this.m);\r\n            return this;\r\n        };\r\n        Matrix.prototype.rotateZ = function (radians) {\r\n            var c = Math.cos(radians), s = Math.sin(radians);\r\n            this.copy(this.m, this.a);\r\n            this.set(this.b, new Float32Array([\r\n                c, -s, 0, 0,\r\n                s, c, 0, 0,\r\n                0, 0, 1, 0,\r\n                0, 0, 0, 1\r\n            ]));\r\n            this.multiply(this.a, this.b, this.m);\r\n            return this;\r\n        };\r\n        Matrix.prototype.scale = function (v) {\r\n            this.copy(this.m, this.a);\r\n            this.set(this.b, new Float32Array([\r\n                v.x, 0, 0, 0,\r\n                0, v.y, 0, 0,\r\n                0, 0, v.z, 0,\r\n                0, 0, 0, 1\r\n            ]));\r\n            this.multiply(this.a, this.b, this.m);\r\n            return this;\r\n        };\r\n        Matrix.prototype.position = function (v) {\r\n            if (!arguments.length) {\r\n                return { x: this.m[12], y: this.m[13], z: this.m[14] };\r\n            }\r\n            this.m[12] = v.x;\r\n            this.m[13] = v.y;\r\n            this.m[14] = v.z;\r\n            return { x: this.m[12], y: this.m[13], z: this.m[14] };\r\n        };\r\n        Matrix.prototype.toCss = function () {\r\n            var css = 'matrix3d(';\r\n            for (var i = 0; i < 15; ++i) {\r\n                css += this.m[i].toFixed(5) + ',';\r\n            }\r\n            css += this.m[i].toFixed(5) + ')';\r\n            return css;\r\n        };\r\n        Matrix.prototype.toCssSafari = function () {\r\n            var css = 'matrix3d(';\r\n            for (var i = 0; i < 15; ++i) {\r\n                css += (Math.abs(this.m[i]) < 0.0001) ? '0,' : this.m[i].toFixed(5) + ',';\r\n            }\r\n            css += this.m[i].toFixed(5) + ')';\r\n            return css;\r\n        };\r\n        return Matrix;\r\n    })();\r\n    exports.Matrix = Matrix;\r\n});\r\n//# sourceMappingURL=matrix.js.map;\n",
    "'use strict';\r\ndefine('lib/mtx3/utils/domUtils',[\"require\", \"exports\"], function (require, exports) {\r\n    var DomUtils = (function () {\r\n        function DomUtils() {\r\n        }\r\n        DomUtils.isList = function (obj) {\r\n            return Object.prototype.toString.call(obj) === '[object NodeList]';\r\n        };\r\n        DomUtils.handleAddRemove = function (isAdd, elem, events, callback) {\r\n            var e = events.split(' '), i = -1, j = -1, l = e.length, el = !DomUtils.isList(elem) ? [].concat(elem) : elem;\r\n            while (++i < el.length) {\r\n                j = -1;\r\n                while (++j < l) {\r\n                    if (isAdd) {\r\n                        el[i].addEventListener(e[j], callback);\r\n                    }\r\n                    else {\r\n                        el[i].removeEventListener(e[j], callback);\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        DomUtils.addClass = function (elem, cls) {\r\n            if (!elem || arguments.length !== 2) {\r\n                return this;\r\n            }\r\n            var c = cls.split(' '), i = -1, j = -1, l = c.length, el = !DomUtils.isList(elem) ? [].concat(elem) : elem;\r\n            while (++i < el.length) {\r\n                j = -1;\r\n                while (++j < l) {\r\n                    if (c[j].length > 0 && !el[i].classList.contains(c[j])) {\r\n                        el[i].classList.add(c[j]);\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        DomUtils.removeClass = function (elem, cls) {\r\n            if (!elem || arguments.length !== 2) {\r\n                return this;\r\n            }\r\n            var c = cls.split(' '), i = -1, j = -1, l = c.length, el = !DomUtils.isList(elem) ? [].concat(elem) : elem;\r\n            while (++i < el.length) {\r\n                j = -1;\r\n                while (++j < l) {\r\n                    if (c[j].length > 0 && el[i].classList.contains(c[j])) {\r\n                        el[i].classList.remove(c[j]);\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        DomUtils.toggleClass = function (elem, cls) {\r\n            if (!elem || arguments.length !== 2) {\r\n                return this;\r\n            }\r\n            var c = cls.split(' '), i = -1, j = -1, l = c.length, el = !DomUtils.isList(elem) ? [].concat(elem) : elem;\r\n            while (++i < el.length) {\r\n                j = -1;\r\n                while (++j < l) {\r\n                    if (c[j].length > 0 && el[i].classList.contains(c[j])) {\r\n                        el[i].classList.remove(c[j]);\r\n                    }\r\n                    else {\r\n                        el[i].classList.add(c[j]);\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        DomUtils.addListener = function (elem, events, callback) {\r\n            if (arguments.length !== 3) {\r\n                return this;\r\n            }\r\n            this.handleAddRemove(true, elem, events, callback);\r\n            return this;\r\n        };\r\n        DomUtils.removeListener = function (elem, events, callback) {\r\n            if (arguments.length !== 3) {\r\n                return this;\r\n            }\r\n            this.handleAddRemove(false, elem, events, callback);\r\n            return this;\r\n        };\r\n        DomUtils.closest = function (elem, cls) {\r\n            while (elem && elem.classList && !elem.classList.contains(cls)) {\r\n                elem = elem.parentElement;\r\n            }\r\n            return elem;\r\n        };\r\n        DomUtils.style = function (elem, options) {\r\n            var i = -1, el = !DomUtils.isList(elem) ? [].concat(elem) : elem;\r\n            if (!elem) {\r\n                return this;\r\n            }\r\n            while (++i < el.length) {\r\n                for (var name in options) {\r\n                    if (options.hasOwnProperty(name)) {\r\n                        el[i].style[name] = options[name];\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        DomUtils.getStyleValue = function (elem, name) {\r\n            if (!elem || !name) {\r\n                return '';\r\n            }\r\n            return window.getComputedStyle(elem, null).getPropertyValue(name);\r\n        };\r\n        DomUtils.matrixTransform = function (elem, mtx) {\r\n            var css = mtx.toCss();\r\n            elem.style.transform = css;\r\n            elem.style.webkitTransform = css;\r\n            return this;\r\n        };\r\n        DomUtils.remove = function (elem) {\r\n            var el = !DomUtils.isList(elem) ? [].concat(elem) : elem, e, i = -1;\r\n            while (++i < el.length) {\r\n                e = el[i];\r\n                e.parentNode.removeChild(e);\r\n            }\r\n            return this;\r\n        };\r\n        DomUtils.removeChild = function (elem) {\r\n            var el = !DomUtils.isList(elem) ? [].concat(elem) : elem, e, i = -1;\r\n            while (++i < el.length) {\r\n                e = el[i];\r\n                while (e && e.firstChild) {\r\n                    e.removeChild(e.firstChild);\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        DomUtils.HTMLList = function (nodes) {\r\n            var i = -1, l = nodes ? nodes.length : 0, list = [];\r\n            while (++i < l) {\r\n                if (nodes[i].nodeType === Node.ELEMENT_NODE) {\r\n                    list.push(nodes[i]);\r\n                }\r\n            }\r\n            return list;\r\n        };\r\n        return DomUtils;\r\n    })();\r\n    exports.DomUtils = DomUtils;\r\n    ;\r\n});\r\n//# sourceMappingURL=domUtils.js.map;\n",
    "'use strict';\r\ndefine('lib/mtx3/core/touch',[\"require\", \"exports\", '../interfaces/touch', '../utils/domUtils'], function (require, exports, touch_1, domUtils_1) {\r\n    var Touch = (function () {\r\n        function Touch() {\r\n            var _this = this;\r\n            this._horizontal = true;\r\n            this._vertical = true;\r\n            this._threshold = 10;\r\n            this.swipeAllow = function (direction) {\r\n                if ((direction === touch_1.TouchDirection.LEFT ||\r\n                    direction === touch_1.TouchDirection.RIGHT) &&\r\n                    _this._horizontal) {\r\n                    return true;\r\n                }\r\n                if ((direction === touch_1.TouchDirection.UP ||\r\n                    direction === touch_1.TouchDirection.DOWN) &&\r\n                    _this._vertical) {\r\n                    return true;\r\n                }\r\n                return false;\r\n            };\r\n            this.swipeDistance = function (startPos, endPos) {\r\n                var d = Math.round(Math.sqrt(Math.pow(endPos.x - startPos.x, 2) +\r\n                    Math.pow(endPos.y - startPos.y, 2)));\r\n                return (isNaN(d) ? 0 : d);\r\n            };\r\n            this.swipeAngle = function (s, e) {\r\n                var r = Math.atan2(e.y - s.y, s.x - e.x), a = Math.round(r * 180 / Math.PI);\r\n                return (a < 0) ? a = 360 - Math.abs(a) : a;\r\n            };\r\n            this.swipeDirection = function (startPoint, endPoint) {\r\n                var angle = _this.swipeAngle(startPoint, endPoint);\r\n                if ((angle <= 45) && (angle >= 0)) {\r\n                    return touch_1.TouchDirection.LEFT;\r\n                }\r\n                else if ((angle <= 360) && (angle >= 315)) {\r\n                    return touch_1.TouchDirection.LEFT;\r\n                }\r\n                else if ((angle >= 135) && (angle <= 225)) {\r\n                    return touch_1.TouchDirection.RIGHT;\r\n                }\r\n                else if ((angle > 45) && (angle < 135)) {\r\n                    return touch_1.TouchDirection.DOWN;\r\n                }\r\n                return touch_1.TouchDirection.UP;\r\n            };\r\n            this.swipeEvent = function (type, direction, position, distance) {\r\n                return {\r\n                    direction: direction,\r\n                    distance: Math.round(distance),\r\n                    position: position,\r\n                    type: type\r\n                };\r\n            };\r\n            this.trigger = function (touchevent, evt) {\r\n                _this._container.dispatchEvent(new CustomEvent('mtx3-swipe', {\r\n                    detail: {\r\n                        type: touchevent.type,\r\n                        message: touchevent,\r\n                        time: Date.now(),\r\n                        original: evt\r\n                    },\r\n                    bubbles: false,\r\n                    cancelable: true\r\n                }));\r\n            };\r\n            this.initDistances = function () {\r\n                var map = {};\r\n                map[touch_1.TouchDirection.LEFT] = { d: 0 };\r\n                map[touch_1.TouchDirection.RIGHT] = { d: 0 };\r\n                map[touch_1.TouchDirection.UP] = { d: 0 };\r\n                map[touch_1.TouchDirection.DOWN] = { d: 0 };\r\n                return map;\r\n            };\r\n            this.handleStart = function (evt) {\r\n                var now = Date.now();\r\n                evt.stopPropagation();\r\n                evt.preventDefault();\r\n                if (_this._active && now - _this._lastTime < Touch.TOUCH_DBL_TME) {\r\n                    _this.trigger(_this.swipeEvent(touch_1.TouchEventType.DBLTAP, touch_1.TouchDirection.NONE, _this._lastPos, 0), evt);\r\n                    return;\r\n                }\r\n                _this._active = true;\r\n                _this._direction = null;\r\n                _this._distancesActive = _this.initDistances();\r\n                _this._lastPos = _this.swipePosition(evt);\r\n                _this._lastTime = now;\r\n                _this.trigger(_this.swipeEvent(touch_1.TouchEventType.START, touch_1.TouchDirection.NONE, _this._lastPos, 0), evt);\r\n            };\r\n            this.handleMove = function (evt) {\r\n                if (!_this._active || !_this._lastPos) {\r\n                    return;\r\n                }\r\n                evt.stopPropagation();\r\n                evt.preventDefault();\r\n                var now = Date.now(), pos = _this.swipePosition(evt), d = _this.swipeDistance(_this._lastPos, pos), elapsed = now - _this._lastTime, v = 0;\r\n                if (d < Touch.TOUCH_DBL_MAX && (elapsed < Touch.TOUCH_DBL_TME && elapsed > 0)) {\r\n                    _this.trigger(_this.swipeEvent(touch_1.TouchEventType.DBLTAP, touch_1.TouchDirection.NONE, pos, 0));\r\n                    return;\r\n                }\r\n                if (d > 0) {\r\n                    v = d / (now - _this._lastTime) / 2;\r\n                    d += (isFinite(d)) ? 0 : v * 100;\r\n                    _this._direction = _this.swipeDirection(_this._lastPos, pos);\r\n                    _this._distancesActive[_this._direction].d += d;\r\n                    if (!pos.isPinch && _this._distancesActive[_this._direction].d < _this._threshold) {\r\n                        return;\r\n                    }\r\n                    if (_this.swipeAllow(_this._direction)) {\r\n                        var t = _this._distancesActive[_this._direction].d % _this._threshold;\r\n                        _this._distancesActive[_this._direction].d = _this._distancesActive[_this._direction].d - t;\r\n                        _this.trigger(_this.swipeEvent(touch_1.TouchEventType.MOVE, _this._direction, pos, _this._distancesActive[_this._direction].d));\r\n                        _this._distancesActive[_this._direction].d = t;\r\n                    }\r\n                }\r\n                _this._lastPos = pos;\r\n                _this._lastTime = now;\r\n            };\r\n            this.handleEnd = function (evt) {\r\n                if (!_this._active) {\r\n                    return;\r\n                }\r\n                evt.stopPropagation();\r\n                evt.preventDefault();\r\n                var now = Date.now(), pos = _this.swipePosition(evt), d = _this.swipeDistance(_this._lastPos, pos), v = 0;\r\n                if (d > 0) {\r\n                    v = d / (now - _this._lastTime) / 2;\r\n                    d += (isFinite(d)) ? 0 : v * 100;\r\n                    _this._direction = _this.swipeDirection(_this._lastPos, pos);\r\n                    _this._distancesActive[_this._direction].d += d;\r\n                }\r\n                if (_this.swipeAllow(_this._direction)) {\r\n                    _this.trigger(_this.swipeEvent(touch_1.TouchEventType.END, _this._direction, pos, _this._distancesActive[_this._direction].d));\r\n                }\r\n                _this._active = false;\r\n                _this._lastPos = null;\r\n            };\r\n            this.handleLeave = function () {\r\n                _this._active = false;\r\n                _this._lastPos = null;\r\n            };\r\n            this.handleCancel = function (evt) {\r\n                _this._active = false;\r\n                _this._lastPos = Touch.initialPosition();\r\n                _this.trigger(_this.swipeEvent(touch_1.TouchEventType.CANCEL, touch_1.TouchDirection.NONE, _this._lastPos, 0), evt);\r\n            };\r\n        }\r\n        Touch.prototype.swipePosition = function (evt) {\r\n            var cx = [], cy = [], i = -1, touches;\r\n            touches = evt.touches && evt.touches.length ? evt.touches : [evt];\r\n            if (touches.length === 1) {\r\n                return {\r\n                    isPinch: false,\r\n                    scale: 1,\r\n                    x: touches[0].clientX,\r\n                    y: touches[0].clientY\r\n                };\r\n            }\r\n            while (++i < touches.length) {\r\n                cx.push(touches[i].clientX);\r\n                cy.push(touches[i].clientY);\r\n            }\r\n            return {\r\n                isPinch: true,\r\n                scale: (evt.scale ? evt.scale : 1),\r\n                x: (Math.min.apply(Math, cx) + Math.max.apply(Math, cx)) / 2,\r\n                y: (Math.min.apply(Math, cy) + Math.max.apply(Math, cy)) / 2\r\n            };\r\n        };\r\n        ;\r\n        Touch.prototype.container = function (v) {\r\n            if ((!arguments.length)) {\r\n                return this._container;\r\n            }\r\n            this._container = v;\r\n            return this;\r\n        };\r\n        Touch.prototype.horizontal = function (v) {\r\n            if ((!arguments.length)) {\r\n                return this._horizontal;\r\n            }\r\n            this._horizontal = v;\r\n            return this;\r\n        };\r\n        Touch.prototype.vertical = function (v) {\r\n            if ((!arguments.length)) {\r\n                return this._vertical;\r\n            }\r\n            this._vertical = v;\r\n            return this;\r\n        };\r\n        Touch.prototype.threshold = function (v) {\r\n            if ((!arguments.length)) {\r\n                return this._threshold;\r\n            }\r\n            this._threshold = v;\r\n            return this;\r\n        };\r\n        Touch.prototype.start = function () {\r\n            this._lastPos = Touch.initialPosition();\r\n            this._lastTime = 0;\r\n            this._active = false;\r\n            domUtils_1.DomUtils.addListener(this._container, 'touchstart mousedown', this.handleStart);\r\n            domUtils_1.DomUtils.addListener(this._container, 'touchmove mousemove', this.handleMove);\r\n            domUtils_1.DomUtils.addListener(this._container, 'touchleave mouseleave', this.handleEnd);\r\n            domUtils_1.DomUtils.addListener(this._container, 'touchend mouseup', this.handleEnd);\r\n            domUtils_1.DomUtils.addListener(this._container, 'touchcancel', this.handleCancel);\r\n            return this;\r\n        };\r\n        Touch.prototype.destroy = function () {\r\n            domUtils_1.DomUtils.removeListener(this._container, 'touchstart mousedown', this.handleStart);\r\n            domUtils_1.DomUtils.removeListener(this._container, 'touchmove mousemove', this.handleMove);\r\n            domUtils_1.DomUtils.removeListener(this._container, 'touchleave mouseleave', this.handleEnd);\r\n            domUtils_1.DomUtils.removeListener(this._container, 'touchend mouseup', this.handleEnd);\r\n            domUtils_1.DomUtils.removeListener(this._container, 'touchcancel', this.handleCancel);\r\n            return this;\r\n        };\r\n        Touch.TOUCH_MVE_MIN = 30;\r\n        Touch.TOUCH_DBL_MAX = 10;\r\n        Touch.TOUCH_DBL_TME = 300;\r\n        Touch.initialPosition = function () {\r\n            return {\r\n                isPinch: false,\r\n                scale: 1,\r\n                x: 0,\r\n                y: 0\r\n            };\r\n        };\r\n        return Touch;\r\n    })();\r\n    exports.Touch = Touch;\r\n    ;\r\n});\r\n//# sourceMappingURL=touch.js.map;\n",
    "'use strict';\r\ndefine('lib/mtx3/utils/DomUtils',[\"require\", \"exports\"], function (require, exports) {\r\n    var DomUtils = (function () {\r\n        function DomUtils() {\r\n        }\r\n        DomUtils.isList = function (obj) {\r\n            return Object.prototype.toString.call(obj) === '[object NodeList]';\r\n        };\r\n        DomUtils.handleAddRemove = function (isAdd, elem, events, callback) {\r\n            var e = events.split(' '), i = -1, j = -1, l = e.length, el = !DomUtils.isList(elem) ? [].concat(elem) : elem;\r\n            while (++i < el.length) {\r\n                j = -1;\r\n                while (++j < l) {\r\n                    if (isAdd) {\r\n                        el[i].addEventListener(e[j], callback);\r\n                    }\r\n                    else {\r\n                        el[i].removeEventListener(e[j], callback);\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        DomUtils.addClass = function (elem, cls) {\r\n            if (!elem || arguments.length !== 2) {\r\n                return this;\r\n            }\r\n            var c = cls.split(' '), i = -1, j = -1, l = c.length, el = !DomUtils.isList(elem) ? [].concat(elem) : elem;\r\n            while (++i < el.length) {\r\n                j = -1;\r\n                while (++j < l) {\r\n                    if (c[j].length > 0 && !el[i].classList.contains(c[j])) {\r\n                        el[i].classList.add(c[j]);\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        DomUtils.removeClass = function (elem, cls) {\r\n            if (!elem || arguments.length !== 2) {\r\n                return this;\r\n            }\r\n            var c = cls.split(' '), i = -1, j = -1, l = c.length, el = !DomUtils.isList(elem) ? [].concat(elem) : elem;\r\n            while (++i < el.length) {\r\n                j = -1;\r\n                while (++j < l) {\r\n                    if (c[j].length > 0 && el[i].classList.contains(c[j])) {\r\n                        el[i].classList.remove(c[j]);\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        DomUtils.toggleClass = function (elem, cls) {\r\n            if (!elem || arguments.length !== 2) {\r\n                return this;\r\n            }\r\n            var c = cls.split(' '), i = -1, j = -1, l = c.length, el = !DomUtils.isList(elem) ? [].concat(elem) : elem;\r\n            while (++i < el.length) {\r\n                j = -1;\r\n                while (++j < l) {\r\n                    if (c[j].length > 0 && el[i].classList.contains(c[j])) {\r\n                        el[i].classList.remove(c[j]);\r\n                    }\r\n                    else {\r\n                        el[i].classList.add(c[j]);\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        DomUtils.addListener = function (elem, events, callback) {\r\n            if (arguments.length !== 3) {\r\n                return this;\r\n            }\r\n            this.handleAddRemove(true, elem, events, callback);\r\n            return this;\r\n        };\r\n        DomUtils.removeListener = function (elem, events, callback) {\r\n            if (arguments.length !== 3) {\r\n                return this;\r\n            }\r\n            this.handleAddRemove(false, elem, events, callback);\r\n            return this;\r\n        };\r\n        DomUtils.closest = function (elem, cls) {\r\n            while (elem && elem.classList && !elem.classList.contains(cls)) {\r\n                elem = elem.parentElement;\r\n            }\r\n            return elem;\r\n        };\r\n        DomUtils.style = function (elem, options) {\r\n            var i = -1, el = !DomUtils.isList(elem) ? [].concat(elem) : elem;\r\n            if (!elem) {\r\n                return this;\r\n            }\r\n            while (++i < el.length) {\r\n                for (var name in options) {\r\n                    if (options.hasOwnProperty(name)) {\r\n                        el[i].style[name] = options[name];\r\n                    }\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        DomUtils.getStyleValue = function (elem, name) {\r\n            if (!elem || !name) {\r\n                return '';\r\n            }\r\n            return window.getComputedStyle(elem, null).getPropertyValue(name);\r\n        };\r\n        DomUtils.matrixTransform = function (elem, mtx) {\r\n            var css = mtx.toCss();\r\n            elem.style.transform = css;\r\n            elem.style.webkitTransform = css;\r\n            return this;\r\n        };\r\n        DomUtils.remove = function (elem) {\r\n            var el = !DomUtils.isList(elem) ? [].concat(elem) : elem, e, i = -1;\r\n            while (++i < el.length) {\r\n                e = el[i];\r\n                e.parentNode.removeChild(e);\r\n            }\r\n            return this;\r\n        };\r\n        DomUtils.removeChild = function (elem) {\r\n            var el = !DomUtils.isList(elem) ? [].concat(elem) : elem, e, i = -1;\r\n            while (++i < el.length) {\r\n                e = el[i];\r\n                while (e && e.firstChild) {\r\n                    e.removeChild(e.firstChild);\r\n                }\r\n            }\r\n            return this;\r\n        };\r\n        DomUtils.HTMLList = function (nodes) {\r\n            var i = -1, l = nodes ? nodes.length : 0, list = [];\r\n            while (++i < l) {\r\n                if (nodes[i].nodeType === Node.ELEMENT_NODE) {\r\n                    list.push(nodes[i]);\r\n                }\r\n            }\r\n            return list;\r\n        };\r\n        return DomUtils;\r\n    })();\r\n    exports.DomUtils = DomUtils;\r\n    ;\r\n});\r\n//# sourceMappingURL=domUtils.js.map;\n",
    "'use strict';\r\ndefine('lib/mtx3/core/tween',[\"require\", \"exports\", '../core/frame', '../core/matrix', '../utils/DomUtils'], function (require, exports, frame_1, matrix_1, DomUtils_1) {\r\n    (function (TweenEasing) {\r\n        TweenEasing[TweenEasing[\"LINEAR\"] = 1] = \"LINEAR\";\r\n        TweenEasing[TweenEasing[\"EASE_OUT_BOUNCE\"] = 2] = \"EASE_OUT_BOUNCE\";\r\n        TweenEasing[TweenEasing[\"EASE_OUT_QUAD\"] = 3] = \"EASE_OUT_QUAD\";\r\n        TweenEasing[TweenEasing[\"EASE_IN_QUAD\"] = 4] = \"EASE_IN_QUAD\";\r\n    })(exports.TweenEasing || (exports.TweenEasing = {}));\r\n    var TweenEasing = exports.TweenEasing;\r\n    var Tween = (function () {\r\n        function Tween() {\r\n            var _this = this;\r\n            this._duration = Tween.TWEEN_DURATION;\r\n            this._interpolates = [];\r\n            this.execute = function () {\r\n                Tween.TWEEN_FRAME.timer(0, function (t, c) {\r\n                    var d = 0, isComplete = t > _this._duration || c;\r\n                    _this._interpolates.forEach(function (interpolate) {\r\n                        interpolate(t, isComplete);\r\n                    });\r\n                    if (isComplete && _this._completeCb) {\r\n                        _this._completeCb();\r\n                    }\r\n                    return isComplete;\r\n                });\r\n            };\r\n        }\r\n        Tween.getEasing = function (easing) {\r\n            switch (easing) {\r\n                case TweenEasing.LINEAR:\r\n                    return Tween.linear;\r\n                case TweenEasing.EASE_OUT_BOUNCE:\r\n                    return Tween.easeOutBounce;\r\n                case TweenEasing.EASE_OUT_QUAD:\r\n                    return Tween.easeOutQuad;\r\n                case TweenEasing.EASE_IN_QUAD:\r\n                    return Tween.easeInQuad;\r\n                default:\r\n                    return null;\r\n            }\r\n        };\r\n        Tween.easeOutBounce = function (t, b, c, d) {\r\n            if ((t /= d) < (1 / 2.75)) {\r\n                return c * (7.5625 * t * t) + b;\r\n            }\r\n            else if (t < (2 / 2.75)) {\r\n                return c * (7.5625 * (t -= (1.5 / 2.75)) * t + 0.75) + b;\r\n            }\r\n            else if (t < (2.5 / 2.75)) {\r\n                return c * (7.5625 * (t -= (2.25 / 2.75)) * t + 0.9375) + b;\r\n            }\r\n            else {\r\n                return c * (7.5625 * (t -= (2.625 / 2.75)) * t + 0.984375) + b;\r\n            }\r\n        };\r\n        Tween.linear = function (t, b, c, d) {\r\n            return c * t / d + b;\r\n        };\r\n        Tween.easeOutQuad = function (t, b, c, d) {\r\n            t /= d;\r\n            return -c * t * (t - 2) + b;\r\n        };\r\n        Tween.easeInQuad = function (t, b, c, d) {\r\n            return c * (t /= d) * t + b;\r\n        };\r\n        Tween.prototype.complete = function (v) {\r\n            this._completeCb = v;\r\n            return this;\r\n        };\r\n        Tween.prototype.duration = function (v) {\r\n            this._duration = v;\r\n            return this;\r\n        };\r\n        Tween.prototype.selected = function (list) {\r\n            this._elements = list;\r\n            return this;\r\n        };\r\n        Tween.prototype.element = function (elem) {\r\n            this._elements = [elem];\r\n            return this;\r\n        };\r\n        Tween.prototype.easing = function (easing) {\r\n            this._easing = Tween.getEasing(easing);\r\n            return this;\r\n        };\r\n        Tween.prototype.style = function (name, target) {\r\n            var _this = this;\r\n            this._elements.forEach(function (elem) {\r\n                var m = DomUtils_1.DomUtils.getStyleValue(elem, name).match(Tween.TWEEN_STYLE_UNITS_REGEX), start = parseFloat(m[1]) || 0, units = m[2] || '';\r\n                var create = function (e, start, target, units) {\r\n                    return function (t, isComplete) {\r\n                        var d = 0, distance = Tween.calcDistance(start, target);\r\n                        d = (isComplete ? distance : _this._easing(t, 0, distance, _this._duration));\r\n                        d = (start > target) ? start - d : start + d;\r\n                        e.style.setProperty(name, d + units);\r\n                    };\r\n                };\r\n                _this._interpolates.push(create(elem, start, target, units));\r\n            });\r\n            return this;\r\n        };\r\n        Tween.prototype.translate = function (target) {\r\n            var _this = this;\r\n            var start = { x: 0, y: 0, z: 0 }, distance = { x: 0, y: 0, z: 0 }, element = this._elements[0], trans;\r\n            if (!element) {\r\n                return;\r\n            }\r\n            trans = DomUtils_1.DomUtils.getStyleValue(element, 'transform');\r\n            if (trans && trans !== 'none') {\r\n                var m = trans.match(Tween.TWEEN_STYLE_NUMBERS_REGEX);\r\n                if (m.length === 16) {\r\n                    start.x = parseInt(m[13], 10);\r\n                    start.y = parseInt(m[14], 10);\r\n                    start.z = parseInt(m[15], 10);\r\n                }\r\n                else {\r\n                    start.x = parseInt(m[4], 10);\r\n                    start.y = parseInt(m[5], 10);\r\n                }\r\n            }\r\n            distance.x = Tween.calcDistance(start.x, target.x);\r\n            distance.y = Tween.calcDistance(start.y, target.y);\r\n            distance.z = Tween.calcDistance(start.z, target.z);\r\n            var create = function (p) {\r\n                var m = new matrix_1.Matrix();\r\n                var update = function (t, isComplete, start, distance, target) {\r\n                    var d = (isComplete ? distance : _this._easing(t, 0, distance, _this._duration));\r\n                    return (start > target) ? start - d : start + d;\r\n                };\r\n                return function (t, isComplete) {\r\n                    var np = m.position();\r\n                    np.x = update(t, isComplete, start.x, distance.x, target.x);\r\n                    np.y = update(t, isComplete, start.y, distance.y, target.y);\r\n                    np.z = update(t, isComplete, start.z, distance.z, target.z);\r\n                    m.identity().translate(np);\r\n                    DomUtils_1.DomUtils.matrixTransform(element, m);\r\n                };\r\n            };\r\n            this._interpolates.push(create(target));\r\n            return this;\r\n        };\r\n        Tween.prototype.start = function () {\r\n            this.execute();\r\n            return this;\r\n        };\r\n        Tween.TWEEN_DURATION = 300;\r\n        Tween.TWEEN_STYLE_UNITS_REGEX = /^([+-]?(?:\\d+|\\d*\\.\\d+))([a-z]*|%)$/;\r\n        Tween.TWEEN_STYLE_NUMBERS_REGEX = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g;\r\n        Tween.TWEEN_FRAME = new frame_1.Frame();\r\n        Tween.calcDistance = function (start, end) {\r\n            var d = start - end;\r\n            return (d < 0) ? d * -1 : d;\r\n        };\r\n        return Tween;\r\n    })();\r\n    exports.Tween = Tween;\r\n});\r\n//# sourceMappingURL=tween.js.map;\n",
    "'use strict';\r\ndefine('lib/mtx3/utils/Utils',[\"require\", \"exports\", './domUtils'], function (require, exports, domUtils_1) {\r\n    var Utils = (function () {\r\n        function Utils() {\r\n        }\r\n        Utils.toRadians = function (a) {\r\n            return a * (Math.PI / 180);\r\n        };\r\n        Utils.toDegrees = function (r) {\r\n            return r * (180 / Math.PI);\r\n        };\r\n        Utils.extend = function (t) {\r\n            var prop, sources = [].slice.call(arguments, 1);\r\n            sources.forEach(function (s) {\r\n                for (prop in s) {\r\n                    if (s.hasOwnProperty(prop)) {\r\n                        t[prop] = s[prop];\r\n                    }\r\n                }\r\n            });\r\n            return t;\r\n        };\r\n        Utils.createInstance = function (context, cls) {\r\n            var args = [];\r\n            for (var _i = 2; _i < arguments.length; _i++) {\r\n                args[_i - 2] = arguments[_i];\r\n            }\r\n            var o = Object.create(context[cls].prototype);\r\n            o.constructor.apply(o, args);\r\n            return o;\r\n        };\r\n        Utils.createMTX3Container = function (container) {\r\n            var c = document.createElement('div'), s = document.createElement('div'), e = document.createElement('div');\r\n            domUtils_1.DomUtils.addClass(c, 'mtx3-container');\r\n            domUtils_1.DomUtils.addClass(s, 'mtx3-surface');\r\n            domUtils_1.DomUtils.addClass(e, 'mtx3-entries');\r\n            container.appendChild(c)\r\n                .appendChild(s)\r\n                .appendChild(e);\r\n            return c;\r\n        };\r\n        return Utils;\r\n    })();\r\n    exports.Utils = Utils;\r\n    ;\r\n});\r\n//# sourceMappingURL=Utils.js.map;\n",
    "'use strict';\r\ndefine('lib/mtx3/layout/carousel',[\"require\", \"exports\", '../interfaces/touch', '../core/frame', '../core/matrix', '../core/touch', '../core/tween', '../utils/domUtils', '../utils/Utils'], function (require, exports, touch_1, frame_1, matrix_1, touch_2, tween_1, domUtils_1, Utils_1) {\r\n    var Carousel = (function () {\r\n        function Carousel() {\r\n            var _this = this;\r\n            this._entries = [];\r\n            this._duration = Carousel.ANIMATE_DURATION;\r\n            this.degrees = function (d) {\r\n                return ((d % 360) + 360) % 360;\r\n            };\r\n            this.handleClickEvents = function (event) {\r\n                var elem = domUtils_1.DomUtils.closest(event.target, 'mtx3-entry'), x = event.clientX, direction;\r\n                if (!elem) {\r\n                    return;\r\n                }\r\n                direction = (x < elem.getBoundingClientRect().left + (elem.getBoundingClientRect().width) / 2)\r\n                    ? touch_1.TouchDirection.LEFT : touch_1.TouchDirection.RIGHT;\r\n                _this._distance = _this._angle;\r\n                _this.notifyActive(direction);\r\n                _this.handleSwipeRotation({\r\n                    direction: direction,\r\n                    distance: _this._distance,\r\n                    position: { x: 0, y: 0, z: 0 },\r\n                    type: touch_1.TouchEventType.END\r\n                });\r\n            };\r\n            this.handleSwipeEvents = function (event) {\r\n                var te = event.detail.message;\r\n                switch (te.type) {\r\n                    case touch_1.TouchEventType.START:\r\n                        _this._distance = 0;\r\n                        _this._frameId = 0;\r\n                        break;\r\n                    case touch_1.TouchEventType.MOVE:\r\n                        _this._distance += te.distance;\r\n                        _this.handleSwipeRotation(te);\r\n                        break;\r\n                    case touch_1.TouchEventType.END:\r\n                        _this._distance += te.distance;\r\n                        _this._distance = Math.round(_this._distance / _this._angle) * _this._angle;\r\n                        _this.notifyActive(te.direction);\r\n                        _this.handleSwipeRotation(te);\r\n                        break;\r\n                }\r\n            };\r\n            this.handleSwipeRotation = function (te) {\r\n                var p = 0, r = 0, tot = 0;\r\n                if (_this._frameId) {\r\n                    return;\r\n                }\r\n                _this._frameId = _this._frame.timer(0, function (t, c) {\r\n                    if (t > _this._duration || c) {\r\n                        _this._frameId = 0;\r\n                        for (var i = 0; i < _this._entries.length; i++) {\r\n                            _this._entries[i].a = Math.round(_this._entries[i].a / _this._angle) * _this._angle;\r\n                        }\r\n                        return true;\r\n                    }\r\n                    r = tween_1.Tween.easeOutBounce(t, 0, _this._distance, _this._duration);\r\n                    p = r - p;\r\n                    _this.rotate((te.direction === touch_1.TouchDirection.RIGHT) ? p : -1 * p);\r\n                    tot += p;\r\n                    p = r;\r\n                });\r\n            };\r\n            this.rotate = function (degrees) {\r\n                var i = -1, l = _this._entries.length, e;\r\n                while (++i < l) {\r\n                    e = _this._entries[i];\r\n                    e.a += degrees;\r\n                    e.m.identity()\r\n                        .rotateY(Utils_1.Utils.toRadians(e.a))\r\n                        .translate({ x: 0, y: 0, z: _this._radius });\r\n                    domUtils_1.DomUtils.matrixTransform(e.e, e.m);\r\n                }\r\n                ;\r\n            };\r\n            this.notifyActive = function (direction) {\r\n                var i = -1, l = _this._entries.length, degrees;\r\n                while (++i < l) {\r\n                    degrees = Math.round(_this._entries[i].a / _this._angle) * _this._angle;\r\n                    degrees = _this.degrees((direction === touch_1.TouchDirection.RIGHT ?\r\n                        degrees + _this._distance : degrees - _this._distance));\r\n                    if (degrees > 359 || degrees < 1) {\r\n                        if (_this._notifyCb) {\r\n                            _this._notifyCb(_this._entries[i].e, i);\r\n                            return;\r\n                        }\r\n                    }\r\n                }\r\n            };\r\n            this.circumRadius = function (radius) {\r\n                var r = radius * 2, a = r, b = r, c = r, s = (a + b + c) / 2, A = Math.sqrt(s * (s - a) * (s - b) * (s - c));\r\n                return ((a * b * c) / (4 * A));\r\n            };\r\n            this.apothem = function (width, sides) {\r\n                return Math.ceil(width / (2 * Math.tan(Math.PI / sides)));\r\n            };\r\n            this.cylinderEntryHeight = function (sides, radius) {\r\n                var A = 360 / sides, r = _this.circumRadius(radius), b = Math.pow(r, 2), c = b;\r\n                return (Math.sqrt((b + c) - (2 * r * r * Math.cos(Utils_1.Utils.toRadians(A)))));\r\n            };\r\n            this.renderCarousel = function () {\r\n                var i = -1, c, w = 0;\r\n                c = Utils_1.Utils.createMTX3Container(_this._container);\r\n                c = c.querySelector('.mtx3-entries');\r\n                domUtils_1.DomUtils.addClass(c, 'entries');\r\n                w = _this.cylinderEntryHeight(_this._sides, _this._radius);\r\n                while (++i < _this._sides) {\r\n                    var angle = _this._angle * i, m = new matrix_1.Matrix(), e = document.createElement('div');\r\n                    _this._entries.push({ e: e, m: m, a: angle });\r\n                    e.className = 'mtx3-entry entry';\r\n                    e.dataset['index'] = String(i);\r\n                    c.appendChild(e);\r\n                    domUtils_1.DomUtils.style(e, {\r\n                        width: (w + 'px'),\r\n                        height: '100%',\r\n                        lineHeight: '100%',\r\n                        left: (_this._radius - (w / 2)) + 'px'\r\n                    });\r\n                    if (_this._createCb) {\r\n                        _this._createCb(e, i);\r\n                    }\r\n                    m.identity()\r\n                        .rotateY(Utils_1.Utils.toRadians(angle))\r\n                        .translate({ x: 0, y: 0, z: _this._radius });\r\n                    domUtils_1.DomUtils.matrixTransform(e, m);\r\n                }\r\n            };\r\n            this._frame = new frame_1.Frame();\r\n        }\r\n        Carousel.prototype.container = function (v) {\r\n            if ((!arguments.length)) {\r\n                return this._container;\r\n            }\r\n            this._container = v;\r\n            this._height = this._container.offsetHeight;\r\n            this._width = this._container.offsetWidth;\r\n            this._radius = this._width / 2;\r\n            return this;\r\n        };\r\n        Carousel.prototype.create = function (cb) {\r\n            this._createCb = cb;\r\n            return this;\r\n        };\r\n        Carousel.prototype.duration = function (v) {\r\n            if ((!arguments.length)) {\r\n                return this._duration;\r\n            }\r\n            this._duration = v;\r\n            return this;\r\n        };\r\n        Carousel.prototype.notify = function (cb) {\r\n            this._notifyCb = cb;\r\n            return this;\r\n        };\r\n        Carousel.prototype.sides = function (v) {\r\n            if ((!arguments.length)) {\r\n                return this._sides;\r\n            }\r\n            this._sides = v;\r\n            this._angle = 360 / this._sides;\r\n            return this;\r\n        };\r\n        Carousel.prototype.render = function () {\r\n            this.renderCarousel();\r\n            this._touch = new touch_2.Touch()\r\n                .container(this._container)\r\n                .vertical(true)\r\n                .threshold(this._angle / 3)\r\n                .start();\r\n            domUtils_1.DomUtils.addListener(this._container, 'mtx3-swipe', this.handleSwipeEvents);\r\n            domUtils_1.DomUtils.addListener(this._container, 'click', this.handleClickEvents);\r\n            return this;\r\n        };\r\n        Carousel.ANIMATE_DURATION = 1000;\r\n        return Carousel;\r\n    })();\r\n    exports.Carousel = Carousel;\r\n});\r\n//# sourceMappingURL=carousel.js.map;\n",
    "'use strict';\r\ndefine('lib/mtx3/core/observe',[\"require\", \"exports\"], function (require, exports) {\r\n    var Observer = (function () {\r\n        function Observer() {\r\n        }\r\n        Observer.registerModel = function (model) {\r\n            if (!model.hasOwnProperty('_observedId')) {\r\n                Object.defineProperty(model, '_observedId', {\r\n                    configurable: false,\r\n                    enumerable: false,\r\n                    get: (function (observedId) {\r\n                        return function () {\r\n                            return observedId;\r\n                        };\r\n                    })(++this.uniqueId),\r\n                    set: function () {\r\n                        throw new Error('Read only property _observedId');\r\n                    }\r\n                });\r\n            }\r\n        };\r\n        Observer.observeProperty = function (model, prop) {\r\n            var _this = this;\r\n            var m = {}, notify = function (a, b) {\r\n                _this.notify(a, b);\r\n            };\r\n            function define(model, prop) {\r\n                Object.defineProperty(model, prop, {\r\n                    get: function () {\r\n                        return m;\r\n                    },\r\n                    set: function (value) {\r\n                        for (var p in value) {\r\n                            if (value.hasOwnProperty(p)) {\r\n                                m[p] = value[p];\r\n                            }\r\n                        }\r\n                        notify(model._observedId, m);\r\n                    }\r\n                });\r\n            }\r\n            for (var p in model[prop]) {\r\n                if (model[prop].hasOwnProperty(p)) {\r\n                    m[p] = model[prop][p];\r\n                }\r\n            }\r\n            define(model, prop);\r\n        };\r\n        Observer.notify = function (key, value) {\r\n            if (!this.cache) {\r\n                return this;\r\n            }\r\n            var e, i = -1, l = -1, args = Array.prototype.slice.call(arguments, 1), notifies = this.cache[key];\r\n            if (notifies) {\r\n                l = notifies.length;\r\n                while (++i < l) {\r\n                    (e = notifies[i]).fn.apply(e.scope, args, value);\r\n                }\r\n            }\r\n        };\r\n        Observer.monitor = function (model, prop, scope, cb) {\r\n            var notifies, isObserved = model._observedId || false;\r\n            this.registerModel(model);\r\n            notifies = this.cache[model._observedId] || (this.cache[model._observedId] = []);\r\n            if (!isObserved) {\r\n                this.observeProperty(model, prop);\r\n            }\r\n            notifies.push({ fn: cb, scope: scope || this, id: model._observedId });\r\n            return;\r\n        };\r\n        Observer.remove = function (model) {\r\n            var i = 0, notifies;\r\n            notifies = this.cache[model._observedId];\r\n            if (!notifies) {\r\n                return;\r\n            }\r\n            delete this.cache[model._observedId];\r\n            i = notifies.length;\r\n            while (i--) {\r\n                if (notifies[i].id === model.id) {\r\n                    notifies.splice(i, 1);\r\n                }\r\n            }\r\n        };\r\n        Observer.cache = {};\r\n        Observer.uniqueId = 0;\r\n        return Observer;\r\n    })();\r\n    exports.Observer = Observer;\r\n});\r\n//# sourceMappingURL=observe.js.map;\n",
    "define('lib/mtx3/mtx3',[\"require\", \"exports\", './core/ajax', './core/frame', './layout/carousel', './core/matrix', './core/observe', './core/touch', './core/tween', './utils/domUtils', './utils/Utils', './interfaces/touch', './core/tween'], function (require, exports, ajax_1, frame_1, carousel_1, matrix_1, observe_1, touch_1, tween_1, domUtils_1, Utils_1, touch_2, tween_2) {\r\n    exports.Ajax = ajax_1.Ajax;\r\n    exports.Frame = frame_1.Frame;\r\n    exports.Carousel = carousel_1.Carousel;\r\n    exports.Matrix = matrix_1.Matrix;\r\n    exports.Observer = observe_1.Observer;\r\n    exports.Touch = touch_1.Touch;\r\n    exports.Tween = tween_1.Tween;\r\n    exports.DomUtils = domUtils_1.DomUtils;\r\n    exports.Utils = Utils_1.Utils;\r\n    exports.TouchDirection = touch_2.TouchDirection;\r\n    exports.TouchEventType = touch_2.TouchEventType;\r\n    exports.TweenEasing = tween_2.TweenEasing;\r\n});\r\n//# sourceMappingURL=mtx3.js.map;\n",
    "'use strict';\r\ndefine('app/views/BaseView',[\"require\", \"exports\", '../../lib/mtx3/mtx3'], function (require, exports, mtx3_1) {\r\n    var BaseView = (function () {\r\n        function BaseView() {\r\n            this._duration = BaseView.ANIMATE_DURATION;\r\n        }\r\n        BaseView.prototype.container = function (v) {\r\n            if ((!arguments.length)) {\r\n                return this._container;\r\n            }\r\n            this._container = v;\r\n            return this;\r\n        };\r\n        BaseView.prototype.duration = function (v) {\r\n            if ((!arguments.length)) {\r\n                return this._duration;\r\n            }\r\n            this._duration = v;\r\n            return this;\r\n        };\r\n        BaseView.prototype.metroLines = function (v) {\r\n            if ((!arguments.length)) {\r\n                return this._ml;\r\n            }\r\n            this._ml = v;\r\n            return this;\r\n        };\r\n        BaseView.prototype.metroStations = function (v) {\r\n            if ((!arguments.length)) {\r\n                return this._ms;\r\n            }\r\n            this._ms = v;\r\n            return this;\r\n        };\r\n        BaseView.prototype.render = function () {\r\n            return this;\r\n        };\r\n        BaseView.prototype.start = function () {\r\n            mtx3_1.Observer.monitor(this._ml, 'active', this, this.handleModelLineUpdate);\r\n            return this;\r\n        };\r\n        BaseView.prototype.destroy = function () {\r\n            mtx3_1.Observer.remove(this._ml);\r\n            return this;\r\n        };\r\n        BaseView.prototype.handleModelLineUpdate = function (active) {\r\n            return this;\r\n        };\r\n        BaseView.ANIMATE_DURATION = 1000;\r\n        return BaseView;\r\n    })();\r\n    exports.BaseView = BaseView;\r\n    ;\r\n});\r\n//# sourceMappingURL=BaseView.js.map;\n",
    "'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    __.prototype = b.prototype;\r\n    d.prototype = new __();\r\n};\r\ndefine('app/views/IncidentsView',[\"require\", \"exports\", './BaseView', '../../lib/mtx3/mtx3'], function (require, exports, BaseView_1, mtx3_1) {\r\n    var IncidentsView = (function (_super) {\r\n        __extends(IncidentsView, _super);\r\n        function IncidentsView() {\r\n            var _this = this;\r\n            _super.apply(this, arguments);\r\n            this._entriesMap = {};\r\n            this._isActive = false;\r\n            this.createIncidentsContainer = function (container, line) {\r\n                var t = document.querySelector('#tmplIncidents'), c;\r\n                c = document.importNode(t.content, true);\r\n                mtx3_1.DomUtils.addClass(c.querySelector('.incident'), line.code);\r\n                mtx3_1.DomUtils.addClass(c.querySelector('.line'), line.code);\r\n                c.querySelector('.name').textContent = line.name + ' line';\r\n                container.appendChild(c);\r\n            };\r\n            this.removePending = function (cb) {\r\n                var list = mtx3_1.DomUtils.HTMLList(_this._container.querySelectorAll('.description.pending'));\r\n                new mtx3_1.Tween()\r\n                    .duration(IncidentsView.TWEEN_DURATION)\r\n                    .easing(mtx3_1.TweenEasing.LINEAR)\r\n                    .selected(list)\r\n                    .style('opacity', 0)\r\n                    .complete(function () {\r\n                    mtx3_1.DomUtils.removeClass(_this._container.querySelectorAll('.description.pending'), 'pending');\r\n                    cb();\r\n                })\r\n                    .start();\r\n            };\r\n            this.removeIncident = function (incidentId) {\r\n                var elem = _this._container.querySelector('.description[data-incidentid=\"' + incidentId + '\"]');\r\n                mtx3_1.DomUtils.remove(elem);\r\n            };\r\n            this.createIncident = function (lineCode, incident) {\r\n                var t = document.querySelector('#tmplIncidentEntry'), c, container = _this._container.querySelector('.incident.' + lineCode);\r\n                c = document.importNode(t.content, true);\r\n                c.querySelector('.description').dataset.incidentid = incident.id;\r\n                c.querySelector('.message').textContent = incident.description;\r\n                c.querySelector('.dateupdate').textContent =\r\n                    (incident.dateUpdate !== '') ? new Date(incident.dateUpdate).toLocaleString() : '';\r\n                container.querySelector('.descriptions').appendChild(c);\r\n                new mtx3_1.Tween()\r\n                    .duration(IncidentsView.TWEEN_DURATION)\r\n                    .easing(mtx3_1.TweenEasing.LINEAR)\r\n                    .element(container.querySelector('.description[data-incidentid=\"' + incident.id + '\"]'))\r\n                    .style('opacity', 1)\r\n                    .start();\r\n            };\r\n            this.updateIncident = function (lineCode, incident) {\r\n                var container = _this._container.querySelector('.incident.' + lineCode), list = mtx3_1.DomUtils.HTMLList(container.querySelectorAll('.descriptions .description')), e = list[0];\r\n                if (e && e.dataset['incidentid'] === 'default' + lineCode) {\r\n                    delete _this._entriesMap['default' + lineCode];\r\n                    e.dataset['incidentid'] = incident.id;\r\n                    e.querySelector('.message').textContent = incident.description;\r\n                    e.querySelector('.dateupdate').textContent = incident.dateUpdate;\r\n                    new mtx3_1.Tween()\r\n                        .duration(IncidentsView.TWEEN_DURATION)\r\n                        .easing(mtx3_1.TweenEasing.LINEAR)\r\n                        .element(e)\r\n                        .style('opacity', 1)\r\n                        .start();\r\n                }\r\n                else {\r\n                    _this.createIncident(lineCode, incident);\r\n                }\r\n            };\r\n            this.renderIncidents = function (container) {\r\n                var frg = document.createDocumentFragment();\r\n                _this._ml.lines.forEach(function (line) {\r\n                    _this.createIncidentsContainer(frg, line);\r\n                });\r\n                container.appendChild(frg);\r\n                _this._ml.lines.forEach(function (line) {\r\n                    var id = 'default' + line.code;\r\n                    _this.createIncident(line.code, {\r\n                        dateUpdate: '',\r\n                        id: id,\r\n                        description: '',\r\n                        isValid: true\r\n                    });\r\n                });\r\n                mtx3_1.DomUtils.addClass(container.querySelectorAll('.descriptions .description'), 'pending');\r\n            };\r\n        }\r\n        IncidentsView.prototype.render = function () {\r\n            var c;\r\n            _super.prototype.render.call(this);\r\n            this.renderIncidents(this._container);\r\n            return this;\r\n        };\r\n        IncidentsView.prototype.start = function () {\r\n            _super.prototype.start.call(this);\r\n            return this;\r\n        };\r\n        IncidentsView.prototype.updateIncidents = function (incidents) {\r\n            var _this = this;\r\n            var reg = /([A-Z]+)/g, incidentMap = {}, dateStamp = new Date().toLocaleString();\r\n            if (!this._isActive) {\r\n                this.removePending(function () {\r\n                    _this._isActive = true;\r\n                    _this.updateIncidents(incidents);\r\n                });\r\n                return;\r\n            }\r\n            this._ml.lines.forEach(function (line) {\r\n                incidentMap[line.code] = false;\r\n            });\r\n            for (var key in this._entriesMap) {\r\n                if (this._entriesMap.hasOwnProperty(key)) {\r\n                    this._entriesMap[key].isValid = false;\r\n                }\r\n            }\r\n            incidents.incidents.forEach(function (incident) {\r\n                var lines = incident.LinesAffected.match(reg);\r\n                lines.forEach(function (lineCode) {\r\n                    incidentMap[lineCode] = true;\r\n                    var id = incident.IncidentID + '-' + lineCode;\r\n                    if (!_this._entriesMap[id]) {\r\n                        _this._entriesMap[id] = {\r\n                            dateUpdate: incident.DateUpdated,\r\n                            id: id,\r\n                            description: incident.Description,\r\n                            isValid: true\r\n                        };\r\n                        _this.updateIncident(lineCode, _this._entriesMap[id]);\r\n                    }\r\n                    else {\r\n                        _this._entriesMap[id].isValid = true;\r\n                    }\r\n                });\r\n            });\r\n            for (var key in this._entriesMap) {\r\n                if (this._entriesMap.hasOwnProperty(key)) {\r\n                    if (!this._entriesMap[key].isValid) {\r\n                        this.removeIncident(key);\r\n                        delete this._entriesMap[key];\r\n                    }\r\n                }\r\n            }\r\n            for (var code in incidentMap) {\r\n                if (incidentMap.hasOwnProperty(code)) {\r\n                    if (!incidentMap[code]) {\r\n                        var id = 'default' + code;\r\n                        this.updateIncident(code, {\r\n                            dateUpdate: dateStamp,\r\n                            id: id,\r\n                            description: IncidentsView.DEFAULT_MESSAGE,\r\n                            isValid: true\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        };\r\n        IncidentsView.DEFAULT_MESSAGE = 'There are currently no alerts for this line';\r\n        IncidentsView.TWEEN_DURATION = 500;\r\n        return IncidentsView;\r\n    })(BaseView_1.BaseView);\r\n    exports.IncidentsView = IncidentsView;\r\n    ;\r\n});\r\n//# sourceMappingURL=IncidentsView.js.map;\n",
    "'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    __.prototype = b.prototype;\r\n    d.prototype = new __();\r\n};\r\ndefine('app/views/NavigationView',[\"require\", \"exports\", './BaseView', '../../lib/mtx3/mtx3'], function (require, exports, BaseView_1, mtx3_1) {\r\n    var NavigationView = (function (_super) {\r\n        __extends(NavigationView, _super);\r\n        function NavigationView() {\r\n            var _this = this;\r\n            _super.apply(this, arguments);\r\n            this.handleNotifyLineCallback = function (container, index) {\r\n                _this._ml.active = { code: _this._ml.lines[index].code, name: _this._ml.lines[index].name };\r\n            };\r\n            this.handleCreateLineCallback = function (container, index) {\r\n                var c = document.createElement('div'), add = function (clsName) {\r\n                    var c = document.createElement('span'), a = document.createElement('i');\r\n                    mtx3_1.DomUtils.addClass(c, 'indicator-container');\r\n                    mtx3_1.DomUtils.addClass(a, clsName);\r\n                    mtx3_1.DomUtils.style(a, {\r\n                        height: container.offsetHeight + 'px',\r\n                        lineHeight: container.offsetHeight + 'px'\r\n                    });\r\n                    c.appendChild(a);\r\n                    return c;\r\n                };\r\n                mtx3_1.DomUtils.addClass(c, 'line ' + _this._ml.lines[index].code);\r\n                c.appendChild(add('fa fa-angle-left fa-5x'));\r\n                c.appendChild(add('fa fa-angle-right fa-5x'));\r\n                container.appendChild(c);\r\n            };\r\n        }\r\n        NavigationView.prototype.render = function () {\r\n            this._carousel = new mtx3_1.Carousel()\r\n                .container(this._container.querySelector('.navigation-lines'))\r\n                .create(this.handleCreateLineCallback)\r\n                .notify(this.handleNotifyLineCallback)\r\n                .sides(6)\r\n                .render();\r\n            return this;\r\n        };\r\n        NavigationView.prototype.start = function () {\r\n            return this;\r\n        };\r\n        NavigationView.prototype.destroy = function () {\r\n            _super.prototype.destroy.call(this);\r\n            mtx3_1.DomUtils.removeChild(this._container.querySelector('.navigation-lines'));\r\n            return this;\r\n        };\r\n        return NavigationView;\r\n    })(BaseView_1.BaseView);\r\n    exports.NavigationView = NavigationView;\r\n    ;\r\n});\r\n//# sourceMappingURL=NavigationView.js.map;\n",
    "'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    __.prototype = b.prototype;\r\n    d.prototype = new __();\r\n};\r\ndefine('app/views/PredictionView',[\"require\", \"exports\", './BaseView', '../../lib/mtx3/mtx3'], function (require, exports, BaseView_1, mtx3_1) {\r\n    ;\r\n    var PredictionView = (function (_super) {\r\n        __extends(PredictionView, _super);\r\n        function PredictionView() {\r\n            var _this = this;\r\n            _super.call(this);\r\n            this._distance = 0;\r\n            this._entriesMap = {};\r\n            this._predictionsMap = {};\r\n            this.handleSwipeEvents = function (evt) {\r\n                var te = evt.detail.message;\r\n                switch (te.type) {\r\n                    case mtx3_1.TouchEventType.START:\r\n                        _this._distance = 0;\r\n                        _this._frameId = 0;\r\n                        console.log('XXX handleSwipeEvents Start:', te.type + ' di:' + te.direction + ' d:' + te.distance);\r\n                        break;\r\n                    case mtx3_1.TouchEventType.MOVE:\r\n                        console.log('XXX handleSwipeEvents Move:', te.type + ' di:' + te.direction + ' d:' + te.distance);\r\n                        _this._distance += te.distance * 2;\r\n                        _this.handleSwipeSlide(te);\r\n                        break;\r\n                    case mtx3_1.TouchEventType.END:\r\n                        _this._distance += te.distance * 2;\r\n                        console.log('XXX handleSwipeEvents End:', te.type + ' di:' + te.direction + ' dd:' + _this._distance);\r\n                        _this._distance = Math.ceil(_this._distance / PredictionView.AXIS_Z) * PredictionView.AXIS_Z;\r\n                        console.log('XXX handleSwipeEvents End:', te.type + ' di:' + te.direction + ' dd:' + _this._distance);\r\n                        _this.handleSwipeSlide(te);\r\n                        break;\r\n                }\r\n            };\r\n            this.handleSwipeSlide = function (te) {\r\n                var p = 0, r = 0, i = -1, l = 0, maxZ = 0, nodes, tot = 0, x = 0;\r\n                if (_this._frameId) {\r\n                    return;\r\n                }\r\n                nodes = _this._container.querySelectorAll('.mtx3-entry.station-entry.active');\r\n                l = nodes.length;\r\n                maxZ = l * PredictionView.AXIS_Z * -1;\r\n                var findEnd = function () {\r\n                    var i = -1, z = 0, me;\r\n                    while (++i < l) {\r\n                        me = _this._entriesMap[nodes[i].dataset['stationCode']];\r\n                        z = me.m.position().z < z ? me.m.position().z : z;\r\n                    }\r\n                    return 1 + (z - PredictionView.AXIS_Z);\r\n                };\r\n                var update = function (d) {\r\n                    var me, i = -1;\r\n                    x += d;\r\n                    while (++i < l) {\r\n                        me = _this._entriesMap[nodes[i].dataset['stationCode']];\r\n                        var z = me.m.position().z + (te.direction === mtx3_1.TouchDirection.DOWN ? d : -1 * d);\r\n                        if (te.direction === mtx3_1.TouchDirection.DOWN) {\r\n                            var v = false;\r\n                            if (z > 0) {\r\n                                z = findEnd();\r\n                                mtx3_1.DomUtils.style(me.e.querySelector('.content'), {\r\n                                    opacity: 0\r\n                                });\r\n                            }\r\n                            else if (z > PredictionView.AXIS_Z * -1) {\r\n                                v = true;\r\n                                mtx3_1.DomUtils.style(me.e.querySelector('.content'), {\r\n                                    opacity: 1\r\n                                });\r\n                            }\r\n                        }\r\n                        else {\r\n                            if (z < maxZ) {\r\n                                z = 0;\r\n                                mtx3_1.DomUtils.style(me.e.querySelector('.content'), {\r\n                                    opacity: 1\r\n                                });\r\n                            }\r\n                            else if (z <= PredictionView.AXIS_Z * -1) {\r\n                                mtx3_1.DomUtils.style(me.e.querySelector('.content'), {\r\n                                    opacity: 0\r\n                                });\r\n                            }\r\n                        }\r\n                        me.m.identity()\r\n                            .translate({\r\n                            x: 0,\r\n                            y: 0,\r\n                            z: z\r\n                        });\r\n                        mtx3_1.DomUtils.matrixTransform(me.e, me.m);\r\n                    }\r\n                };\r\n                _this._frameId = mtx3_1.Tween.TWEEN_FRAME.timer(0, function (t, c) {\r\n                    if (t > _this._duration) {\r\n                        _this._frameId = 0;\r\n                        update(_this._distance - p);\r\n                        for (var i = 0; i < nodes.length; i++) {\r\n                            var me = _this._entriesMap[nodes[i].dataset['stationCode']];\r\n                        }\r\n                        return true;\r\n                    }\r\n                    r = mtx3_1.Tween.linear(t, 0, _this._distance, _this._duration);\r\n                    p = r - p;\r\n                    update(p);\r\n                    tot += p;\r\n                    p = r;\r\n                });\r\n            };\r\n            this.addPrediction = function (ma, mp, group) {\r\n                var t = document.querySelector('#tmplPrediction'), e = ma.e.querySelector('.platform.' + (group === '1' ? 'a' : 'b') + ' .predictions.entries'), c = document.importNode(t.content, true);\r\n                mp.forEach(function (prediction) {\r\n                    c = document.importNode(t.content, true);\r\n                    mtx3_1.DomUtils.addClass(c.querySelector('.entry'), prediction.Line);\r\n                    c.querySelector('.line').firstChild.textContent = (prediction.Line === '--') ? '--' : '';\r\n                    c.querySelector('.arrival').textContent =\r\n                        (parseInt(prediction.Min, 10)) ? prediction.Min + ' min(s)' : prediction.Min;\r\n                    c.querySelector('.destination').textContent = prediction.DestinationName;\r\n                    e.appendChild(c);\r\n                });\r\n            };\r\n            this.predictionGroup = function (mp, group) {\r\n                var r = [];\r\n                mp.forEach(function (entry) {\r\n                    if (entry.Group === group) {\r\n                        r.push(entry);\r\n                    }\r\n                });\r\n                if (r.length === 0) {\r\n                    r.push(PredictionView.defaultPrediction());\r\n                }\r\n                return r;\r\n            };\r\n            this.renderPredictions = function () {\r\n                var me, e, stamp = new Date().toLocaleTimeString(), predictions;\r\n                for (var code in _this._entriesMap) {\r\n                    if (_this._entriesMap.hasOwnProperty(code)) {\r\n                        me = _this._entriesMap[code];\r\n                        mtx3_1.DomUtils.removeChild(me.e.querySelectorAll('.predictions.entries'));\r\n                        predictions = _this._predictionsMap[code] || [PredictionView.defaultPrediction()];\r\n                        _this.addPrediction(_this._entriesMap[code], _this.predictionGroup(predictions, '1'), '1');\r\n                        _this.addPrediction(_this._entriesMap[code], _this.predictionGroup(predictions, '2'), '2');\r\n                        (e = me.e.querySelector('.prediction-update .stamp')).innerText = stamp;\r\n                    }\r\n                }\r\n            };\r\n            this.activateLine = function (code) {\r\n                var stations = _this._ms.stations[code].Stations, p = 0;\r\n                mtx3_1.DomUtils.removeClass(_this._container.querySelectorAll('.mtx3-entry.station-entry.active'), 'active');\r\n                mtx3_1.DomUtils.style(_this._container.querySelectorAll('.mtx3-entry.station-entry .content'), {\r\n                    opacity: 0\r\n                });\r\n                stations.forEach(function (station) {\r\n                    var me = _this._entriesMap[station.Code];\r\n                    mtx3_1.DomUtils.removeClass(me.e, me.c);\r\n                    me.c = code;\r\n                    mtx3_1.DomUtils.addClass(me.e, 'active ' + me.c);\r\n                    if (p === 0) {\r\n                        mtx3_1.DomUtils.style(me.e.querySelector('.content'), {\r\n                            opacity: 1\r\n                        });\r\n                    }\r\n                    me.m.identity()\r\n                        .translate({ x: 0, y: 0, z: (-1 * p) });\r\n                    mtx3_1.DomUtils.matrixTransform(me.e, me.m);\r\n                    p += PredictionView.AXIS_Z;\r\n                });\r\n            };\r\n            this._frame = new mtx3_1.Frame();\r\n        }\r\n        PredictionView.prototype.createStations = function (container) {\r\n            var i = -1, l, station, frg = document.createDocumentFragment(), t = document.querySelector('#tmplStationEntry');\r\n            for (var key in this._ms.stationMap) {\r\n                if (this._ms.stationMap.hasOwnProperty(key)) {\r\n                    station = this._ms.stationMap[key];\r\n                    this.createStation(t, frg, station);\r\n                }\r\n            }\r\n            container.appendChild(frg);\r\n            this.renderStations(container);\r\n        };\r\n        PredictionView.prototype.createStation = function (tmplStation, container, station) {\r\n            var c = document.importNode(tmplStation.content, true);\r\n            c.querySelector('.station-entry').dataset.stationCode = station.code;\r\n            c.querySelector('.name').textContent = station.name;\r\n            container.appendChild(c);\r\n        };\r\n        ;\r\n        PredictionView.prototype.renderStations = function (container) {\r\n            var i = -1, l, nodes;\r\n            nodes = container.querySelectorAll('.station-entry');\r\n            l = nodes.length;\r\n            while (++i < l) {\r\n                this._entriesMap[nodes[i].dataset['stationCode']] = {\r\n                    e: nodes[i],\r\n                    m: new mtx3_1.Matrix().identity(),\r\n                    c: ''\r\n                };\r\n            }\r\n        };\r\n        PredictionView.prototype.render = function () {\r\n            var c;\r\n            this._entriesMap = {};\r\n            _super.prototype.render.call(this);\r\n            c = mtx3_1.Utils.createMTX3Container(this._container);\r\n            mtx3_1.DomUtils.addClass(c, 'main-entries');\r\n            c = c.querySelector('.mtx3-entries');\r\n            mtx3_1.DomUtils.addClass(c, 'main-stations');\r\n            this.createStations(c);\r\n            this._touch = new mtx3_1.Touch()\r\n                .container(this._container)\r\n                .vertical(true)\r\n                .horizontal(false)\r\n                .threshold(5)\r\n                .start();\r\n            return this;\r\n        };\r\n        PredictionView.prototype.start = function () {\r\n            _super.prototype.start.call(this);\r\n            mtx3_1.DomUtils.addListener(this._container, 'mtx3-swipe', this.handleSwipeEvents);\r\n            return this;\r\n        };\r\n        PredictionView.prototype.destroy = function () {\r\n            _super.prototype.destroy.call(this);\r\n            mtx3_1.DomUtils.removeChild(this._container);\r\n            if (this._touch) {\r\n                this._touch.destroy();\r\n                this._touch = null;\r\n            }\r\n            mtx3_1.DomUtils.removeListener(this._container, 'mtx3-swipe', this.handleSwipeEvents);\r\n            return this;\r\n        };\r\n        PredictionView.prototype.updatePredictions = function (predictions) {\r\n            var _this = this;\r\n            var isValidLine = function (lineCode) {\r\n                var i = -1, l = _this._ml.lines.length;\r\n                while (++i < l) {\r\n                    if (lineCode === _this._ml.lines[i].code) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n            this._predictionsMap = {};\r\n            predictions.predictions.forEach(function (p) {\r\n                var a, stations;\r\n                if (!isValidLine(p.Line)) {\r\n                    return true;\r\n                }\r\n                a = _this._predictionsMap[p.LocationCode] || [];\r\n                a.push(p);\r\n                _this._predictionsMap[p.LocationCode] = a;\r\n            });\r\n            this.renderPredictions();\r\n        };\r\n        PredictionView.prototype.handleModelLineUpdate = function (active) {\r\n            this.activateLine(this._ml.active.code);\r\n            return this;\r\n        };\r\n        PredictionView.AXIS_Z = 400;\r\n        PredictionView.defaultPrediction = function () {\r\n            return {\r\n                Car: null,\r\n                Destination: null,\r\n                DestinationCode: null,\r\n                DestinationName: '--',\r\n                Group: null,\r\n                Line: '--',\r\n                LocationCode: null,\r\n                LocationName: null,\r\n                Min: '--'\r\n            };\r\n        };\r\n        return PredictionView;\r\n    })(BaseView_1.BaseView);\r\n    exports.PredictionView = PredictionView;\r\n    ;\r\n});\r\n//# sourceMappingURL=PredictionView.js.map;\n",
    "'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    __.prototype = b.prototype;\r\n    d.prototype = new __();\r\n};\r\ndefine('app/views/PredictionGridView',[\"require\", \"exports\", './PredictionView', '../../lib/mtx3/mtx3'], function (require, exports, PredictionView_1, mtx3_1) {\r\n    ;\r\n    var PredictionGridView = (function (_super) {\r\n        __extends(PredictionGridView, _super);\r\n        function PredictionGridView() {\r\n            var _this = this;\r\n            _super.apply(this, arguments);\r\n            this._entriesMap = {};\r\n            this._grid = [];\r\n            this._gridDepth = 0;\r\n            this._gridMaxDepth = 0;\r\n            this._gridMaxAxisZ = PredictionView_1.PredictionView.AXIS_Z * -1;\r\n            this._gridZAxis = 0;\r\n            this._gridEntries = 0;\r\n            this._cols = PredictionGridView.DEFAULT_COLS;\r\n            this._rows = PredictionGridView.DEFAULT_ROWS;\r\n            this._maxActive = PredictionGridView.DEFAULT_MAX_ACTIVE;\r\n            this._predictionEntries = [];\r\n            this._durationSlideGrid = 340;\r\n            this.calcTickDistance = function (t, isComplete, start, distance, target) {\r\n                var d = (isComplete ? distance : mtx3_1.Tween.linear(t, 0, distance, _this._duration));\r\n                return (start > target) ? start - d : start + d;\r\n            };\r\n            this.initializeGrid = function (depth) {\r\n                var padding = 10, grid = [], z = 0, width = (_this._container.offsetWidth - padding * 2) / _this._cols, height = _this._container.offsetHeight / _this._rows;\r\n                for (var i = 0; i < depth; i += 1) {\r\n                    z = (i * PredictionView_1.PredictionView.AXIS_Z * -1);\r\n                    for (var j = 0; j < _this._rows; j += 1) {\r\n                        for (var k = 0; k < _this._cols; k += 1) {\r\n                            grid.push({\r\n                                x: (k * width + k * padding),\r\n                                y: (j * height),\r\n                                z: z\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n                _this._grid = grid;\r\n                _this._gridWidth = width;\r\n            };\r\n            this.updateGrid = function (z) {\r\n                _this._grid.forEach(function (gPos) {\r\n                    gPos.z += z;\r\n                });\r\n            };\r\n            this.entriesKey = function (key) {\r\n                return key.replace(/[^\\\\d.A-Z]/gi, '').toLowerCase();\r\n            };\r\n            this.handleKeyDownEvents = function (evt) {\r\n                var s = 0, z = 0;\r\n                s = z = _this._gridZAxis;\r\n                switch (evt.keyCode) {\r\n                    case 38:\r\n                        z += z > (_this._gridDepth - 1) * PredictionView_1.PredictionView.AXIS_Z * -1 ? PredictionView_1.PredictionView.AXIS_Z * -1 : 0;\r\n                        break;\r\n                    case 40:\r\n                        z += z < 0 ? PredictionView_1.PredictionView.AXIS_Z : 0;\r\n                        break;\r\n                }\r\n                if (s !== z) {\r\n                    _this._gridZAxis = z;\r\n                    _this.updateGrid(evt.keyCode === 38 ? PredictionView_1.PredictionView.AXIS_Z : PredictionView_1.PredictionView.AXIS_Z * -1);\r\n                    _this.handleGridSlide();\r\n                }\r\n            };\r\n            this.handleGridTick = function (duration, cb) {\r\n                mtx3_1.Tween.TWEEN_FRAME.timer(0, function (t, c) {\r\n                    var isComplete = t > duration || c;\r\n                    for (var key in _this._entriesMap) {\r\n                        if (_this._entriesMap.hasOwnProperty(key)) {\r\n                            var gme = _this._entriesMap[key], cPos = gme.m.position(), tPos = _this._grid[gme.sequence];\r\n                            cPos.x = _this.calcTickDistance(t, isComplete, gme.start.x, mtx3_1.Tween.calcDistance(gme.start.x, tPos.x), tPos.x);\r\n                            cPos.y = _this.calcTickDistance(t, isComplete, gme.start.y, mtx3_1.Tween.calcDistance(gme.start.y, tPos.y), tPos.y);\r\n                            cPos.z = _this.calcTickDistance(t, isComplete, gme.start.z, mtx3_1.Tween.calcDistance(gme.start.z, tPos.z), tPos.z);\r\n                            gme.m.identity()\r\n                                .translate({ x: cPos.x, y: cPos.y, z: cPos.z });\r\n                            mtx3_1.DomUtils.matrixTransform(gme.e, gme.m);\r\n                            cb(isComplete, gme, tPos);\r\n                        }\r\n                    }\r\n                    return isComplete;\r\n                });\r\n            };\r\n            this.handleGridTickCallback = function (isComplete, gme, tPos) {\r\n                var cPos = gme.m.position(), cO = (tPos.z === 0) ? 1 : (cPos.z > 0) ? (1 - (cPos.z / PredictionView_1.PredictionView.AXIS_Z)) :\r\n                    (1 - (cPos.z * -1) / PredictionView_1.PredictionView.AXIS_Z), eO = (tPos.z === 0) ? 1 : (cPos.z > 0) ? (1 - (cPos.z / PredictionView_1.PredictionView.AXIS_Z)) :\r\n                    (1 - (cPos.z * 1.5) / (_this._gridMaxDepth * PredictionView_1.PredictionView.AXIS_Z * -1));\r\n                mtx3_1.DomUtils.style(gme.e, {\r\n                    opacity: eO\r\n                });\r\n                mtx3_1.DomUtils.style(gme.e.querySelector('.content'), {\r\n                    opacity: cO\r\n                });\r\n                if (isComplete && tPos.z > PredictionView_1.PredictionView.AXIS_Z || tPos.z <= (_this._gridMaxDepth - 1) * PredictionView_1.PredictionView.AXIS_Z * -1) {\r\n                    mtx3_1.DomUtils.removeClass(gme.e, 'active grid');\r\n                }\r\n            };\r\n            this.handleGridSlide = function () {\r\n                for (var key in _this._entriesMap) {\r\n                    if (_this._entriesMap.hasOwnProperty(key)) {\r\n                        var gme = _this._entriesMap[key], cPos = gme.m.position(), tPos = _this._grid[gme.sequence];\r\n                        gme.start.x = cPos.x;\r\n                        gme.start.y = cPos.y;\r\n                        gme.start.z = cPos.z;\r\n                        if (tPos.z > _this._gridMaxDepth * PredictionView_1.PredictionView.AXIS_Z * -1) {\r\n                            mtx3_1.DomUtils.addClass(gme.e, 'active grid');\r\n                        }\r\n                    }\r\n                }\r\n                _this.handleGridTick(_this._durationSlideGrid, _this.handleGridTickCallback);\r\n            };\r\n            this.handleGridUpdate = function () {\r\n                _this._predictionEntries.forEach(function (pe, idx) {\r\n                    var gme = _this._entriesMap[_this.entriesKey(pe.stationName)], cPos = gme.m.position();\r\n                    gme.start.x = cPos.x;\r\n                    gme.start.y = cPos.y;\r\n                    gme.start.z = cPos.z;\r\n                    gme.sequence = idx;\r\n                    if (idx < _this._maxActive) {\r\n                        mtx3_1.DomUtils.addClass(gme.e, 'active grid');\r\n                        mtx3_1.DomUtils.style(gme.e, {\r\n                            opacity: 1\r\n                        });\r\n                        mtx3_1.DomUtils.style(gme.e.querySelector('.content'), {\r\n                            opacity: 1\r\n                        });\r\n                    }\r\n                });\r\n                _this.handleGridTick(_this._durationSlideGrid, _this.handleGridTickCallback);\r\n            };\r\n            this.getGridPosition = function (d) {\r\n                var l = _this._grid.length;\r\n                return _this._grid[((d % l) + l) % l];\r\n            };\r\n        }\r\n        PredictionGridView.prototype.createStations = function (container) {\r\n            var station, total = 0, nme, tmp = {}, frg = document.createDocumentFragment(), t = document.querySelector('#tmplStationEntry');\r\n            for (var key in this._ms.stationMap) {\r\n                if (this._ms.stationMap.hasOwnProperty(key)) {\r\n                    total += 1;\r\n                    station = this._ms.stationMap[key];\r\n                    nme = this.entriesKey(station.name);\r\n                    if (!tmp[nme]) {\r\n                        _super.prototype.createStation.call(this, t, frg, station);\r\n                        tmp[nme] = nme;\r\n                    }\r\n                }\r\n            }\r\n            this._gridEntries = total;\r\n            this._gridDepth = Math.round(this._gridEntries / (this._cols * this._rows));\r\n            this._gridMaxDepth = this._maxActive / (this._cols * this._rows);\r\n            this._gridMaxAxisZ = this._gridMaxDepth * PredictionView_1.PredictionView.AXIS_Z * -1;\r\n            this.initializeGrid(this._gridDepth);\r\n            container.appendChild(frg);\r\n            this.renderStations(container);\r\n        };\r\n        PredictionGridView.prototype.renderStations = function (container) {\r\n            var i = -1, l = 0, nodes;\r\n            nodes = container.querySelectorAll('.main-stations .station-entry');\r\n            l = nodes.length;\r\n            while (++i < l) {\r\n                var pos = this.getGridPosition(i), station = void 0, gme = {\r\n                    e: nodes[i],\r\n                    m: new mtx3_1.Matrix().identity(),\r\n                    c: '',\r\n                    sequence: i,\r\n                    start: {\r\n                        x: pos.x,\r\n                        y: pos.y,\r\n                        z: pos.z\r\n                    },\r\n                    stationName: ''\r\n                };\r\n                station = this._ms.stationMap[nodes[i].dataset['stationCode']];\r\n                this._entriesMap[this.entriesKey(station.name)] = gme;\r\n                this._predictionsMap[this.entriesKey(station.name)] = [];\r\n                mtx3_1.DomUtils.style(gme.e, {\r\n                    width: this._gridWidth + 'px'\r\n                });\r\n                if (i < this._maxActive) {\r\n                    mtx3_1.DomUtils.addClass(gme.e, 'active grid');\r\n                    mtx3_1.DomUtils.style(gme.e.querySelector('.content'), {\r\n                        opacity: 1,\r\n                    });\r\n                }\r\n                gme.m.identity()\r\n                    .translate(gme.start);\r\n                mtx3_1.DomUtils.matrixTransform(gme.e, gme.m);\r\n            }\r\n        };\r\n        ;\r\n        PredictionGridView.prototype.render = function () {\r\n            _super.prototype.render.call(this);\r\n            this._container.focus();\r\n            this._durationSlideGrid = this._duration;\r\n            mtx3_1.DomUtils.addListener(this._container, 'keydown', this.handleKeyDownEvents);\r\n            return this;\r\n        };\r\n        PredictionGridView.prototype.start = function () {\r\n            _super.prototype.start.call(this);\r\n            return this;\r\n        };\r\n        PredictionGridView.prototype.destroy = function () {\r\n            _super.prototype.destroy.call(this);\r\n            mtx3_1.DomUtils.removeListener(this._container, 'keydown', this.handleKeyDownEvents);\r\n            return this;\r\n        };\r\n        PredictionGridView.prototype.updatePredictions = function (mp) {\r\n            var _this = this;\r\n            var key, predictions = mp.predictions, predictionEntries = [];\r\n            var isValidLine = function (lineCode) {\r\n                var i = -1, l = _this._ml.lines.length;\r\n                while (++i < l) {\r\n                    if (lineCode === _this._ml.lines[i].code) {\r\n                        return true;\r\n                    }\r\n                }\r\n                return false;\r\n            };\r\n            var add = function (code, mp) {\r\n                var isFound = false, amp;\r\n                if (!code || code.length < 1) {\r\n                    return;\r\n                }\r\n                amp = _this._predictionsMap[code] || [];\r\n                amp.forEach(function (prediction) {\r\n                    if (prediction.LocationCode === mp.LocationCode &&\r\n                        prediction.Min === mp.Min) {\r\n                        isFound = true;\r\n                        return false;\r\n                    }\r\n                });\r\n                if (!isFound) {\r\n                    amp.push(mp);\r\n                }\r\n                _this._predictionsMap[code] = amp;\r\n            };\r\n            for (key in this._predictionsMap) {\r\n                if (this._predictionsMap.hasOwnProperty(key)) {\r\n                    this._predictionsMap[key] = [];\r\n                }\r\n            }\r\n            predictions = predictions.filter(function (mp) {\r\n                if (!isValidLine(mp.Line)) {\r\n                    return false;\r\n                }\r\n                return true;\r\n            });\r\n            this._ml.lines.forEach(function (line) {\r\n                var stations = _this._ms.stations[line.code].Stations;\r\n                stations.forEach(function (station) {\r\n                    predictions.forEach(function (mp) {\r\n                        if (station.Code === mp.LocationCode ||\r\n                            station.StationTogether1 === mp.LocationCode ||\r\n                            station.StationTogether2 === mp.LocationCode) {\r\n                            add(_this.entriesKey(station.Name), mp);\r\n                            return true;\r\n                        }\r\n                    });\r\n                });\r\n            });\r\n            for (key in this._predictionsMap) {\r\n                if (this._predictionsMap.hasOwnProperty(key)) {\r\n                    predictionEntries.push({\r\n                        stationName: key,\r\n                        totalMins: -1,\r\n                        predictions: this._predictionsMap[key]\r\n                    });\r\n                }\r\n            }\r\n            this._predictionEntries = predictionEntries.sort(function (a, b) {\r\n                var totalPredictions = function (pe) {\r\n                    pe.totalMins = 0;\r\n                    pe.predictions.forEach(function (prediction) {\r\n                        pe.totalMins += (prediction.Min === 'BRD') ? 0.5 : (prediction.Min === 'ARR') ? 1 :\r\n                            parseInt(prediction.Min, 10);\r\n                    });\r\n                    pe.totalMins = (pe.totalMins > 1.5) ? pe.totalMins / pe.predictions.length :\r\n                        pe.totalMins === 0 ? pe.totalMins = Number.MAX_VALUE : pe.totalMins;\r\n                    return pe.totalMins;\r\n                };\r\n                var ta = (a.totalMins < 0) ? totalPredictions(a) : a.totalMins, tb = (b.totalMins < 0) ? totalPredictions(b) : b.totalMins;\r\n                return ((ta < tb) ? -1 : ((ta > tb) ? 1 : 0));\r\n            });\r\n            this.renderPredictions();\r\n            this.handleGridUpdate();\r\n        };\r\n        PredictionGridView.prototype.handleModelLineUpdate = function (active) {\r\n            return this;\r\n        };\r\n        PredictionGridView.DEFAULT_COLS = 3;\r\n        PredictionGridView.DEFAULT_ROWS = 2;\r\n        PredictionGridView.DEFAULT_MAX_ACTIVE = 24;\r\n        return PredictionGridView;\r\n    })(PredictionView_1.PredictionView);\r\n    exports.PredictionGridView = PredictionGridView;\r\n    ;\r\n});\r\n//# sourceMappingURL=PredictionGridView.js.map;\n",
    "'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    __.prototype = b.prototype;\r\n    d.prototype = new __();\r\n};\r\ndefine('app/views/MainView',[\"require\", \"exports\", './BaseView', './NavigationView', './PredictionView', './PredictionGridView', '../../lib/mtx3/mtx3'], function (require, exports, BaseView_1, NavigationView_1, PredictionView_1, PredictionGridView_1, mtx3_1) {\r\n    var MainView = (function (_super) {\r\n        __extends(MainView, _super);\r\n        function MainView() {\r\n            var _this = this;\r\n            _super.apply(this, arguments);\r\n            this._isDesktop = true;\r\n            this.renderGrid = function () {\r\n                var isInitial = _this._pView ? false : true;\r\n                if (!isInitial) {\r\n                    _this._pView.destroy();\r\n                    mtx3_1.Observer.remove(_this._mp);\r\n                    _this._pView = null;\r\n                }\r\n                if (_this._isDesktop) {\r\n                    _this._pView = new PredictionGridView_1.PredictionGridView();\r\n                    if (_this._nView) {\r\n                        _this._nView.destroy();\r\n                        _this._nView = null;\r\n                    }\r\n                }\r\n                else {\r\n                    _this._pView = new (PredictionView_1.PredictionView);\r\n                    _this._nView = new NavigationView_1.NavigationView()\r\n                        .metroLines(_this._ml)\r\n                        .metroStations(_this._ms)\r\n                        .container(_this._container.querySelector('.section-navigation'))\r\n                        .render();\r\n                }\r\n                _this._pView.metroLines(_this._ml)\r\n                    .metroStations(_this._ms)\r\n                    .container(_this._container.querySelector('.section-main .main-container'))\r\n                    .duration(_this._isDesktop ? 2000 : 700)\r\n                    .render();\r\n                if (!isInitial) {\r\n                    _this._pView.start();\r\n                    if (_this._nView) {\r\n                        _this._nView.start();\r\n                    }\r\n                    mtx3_1.Observer.monitor(_this._mp, 'active', _this._pView, _this._pView.updatePredictions);\r\n                    _this._ml.active = { code: 'BL', name: 'Blue' };\r\n                }\r\n            };\r\n        }\r\n        MainView.prototype.displayMode = function (v) {\r\n            if ((!arguments.length)) {\r\n                return this._isDesktop;\r\n            }\r\n            this._isDesktop = v;\r\n            if (this._pView) {\r\n                this.renderGrid();\r\n            }\r\n            return this;\r\n        };\r\n        MainView.prototype.metroIncidents = function (v) {\r\n            if ((!arguments.length)) {\r\n                return this._mp;\r\n            }\r\n            this._mi = v;\r\n            return this;\r\n        };\r\n        MainView.prototype.metroPredictions = function (v) {\r\n            if ((!arguments.length)) {\r\n                return this._mp;\r\n            }\r\n            this._mp = v;\r\n            return this;\r\n        };\r\n        MainView.prototype.render = function () {\r\n            this.renderGrid();\r\n            return this;\r\n        };\r\n        MainView.prototype.start = function () {\r\n            if (this._nView) {\r\n                this._nView.start();\r\n            }\r\n            this._pView.start();\r\n            mtx3_1.Observer.monitor(this._mp, 'active', this._pView, this._pView.updatePredictions);\r\n            return this;\r\n        };\r\n        return MainView;\r\n    })(BaseView_1.BaseView);\r\n    exports.MainView = MainView;\r\n    ;\r\n});\r\n//# sourceMappingURL=MainView.js.map;\n",
    "/// <reference path=\"../../../../typings/pdf/pdf.d.ts\"/>\r\n'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    __.prototype = b.prototype;\r\n    d.prototype = new __();\r\n};\r\ndefine('app/views/MapView',[\"require\", \"exports\", './BaseView'], function (require, exports, BaseView_1) {\r\n    var MapView = (function (_super) {\r\n        __extends(MapView, _super);\r\n        function MapView() {\r\n            var _this = this;\r\n            _super.call(this);\r\n            this.renderPage = function (pageNumber) {\r\n                _this._pdf.getPage(pageNumber).then(function (page) {\r\n                    var vp = page.getViewport(MapView.PAGE_SCALE);\r\n                    vp = page.getViewport(MapView.PAGE_WIDTH / vp.width);\r\n                    _this._canvas.height = vp.height;\r\n                    _this._canvas.width = vp.width;\r\n                    page.render({\r\n                        canvasContext: _this._canvas.getContext('2d'),\r\n                        viewport: vp\r\n                    }).then(function () {\r\n                        _this._container.scrollTop = _this._canvas.height / 4;\r\n                        _this._container.scrollLeft = _this._canvas.width / 4;\r\n                    }, function (error) {\r\n                        console.error('Error loading metro map', error);\r\n                    });\r\n                }, function (error) {\r\n                    console.error('Error rendering page', error);\r\n                });\r\n            };\r\n        }\r\n        MapView.prototype.pdfFile = function (v) {\r\n            if ((!arguments.length)) {\r\n                return this;\r\n            }\r\n            this._fn = v;\r\n            return this;\r\n        };\r\n        MapView.prototype.render = function () {\r\n            this._canvas = this._container.querySelector('.map-container');\r\n            return this;\r\n        };\r\n        MapView.prototype.start = function () {\r\n            var _this = this;\r\n            PDFJS.workerSrc = 'javascript/lib/pdf.worker.js';\r\n            var req = new XMLHttpRequest();\r\n            req.open('GET', this._fn, true);\r\n            req.responseType = 'arraybuffer';\r\n            req.onload = function () {\r\n                if (req.response) {\r\n                    PDFJS.getDocument(new Uint8Array(req.response)).then(function (pdf) {\r\n                        _this._pdf = pdf;\r\n                        _this.renderPage(1);\r\n                    }, function (error) {\r\n                        console.error('Error displaying metro map', error);\r\n                    });\r\n                }\r\n            };\r\n            req.onerror = function (error) {\r\n                console.error('Error retrieving metro map', error);\r\n            };\r\n            req.send();\r\n            return this;\r\n        };\r\n        MapView.PAGE_WIDTH = 1024;\r\n        MapView.PAGE_SCALE = 1;\r\n        return MapView;\r\n    })(BaseView_1.BaseView);\r\n    exports.MapView = MapView;\r\n    ;\r\n});\r\n//# sourceMappingURL=MapView.js.map;\n",
    "'use strict';\r\nvar __extends = (this && this.__extends) || function (d, b) {\r\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\r\n    function __() { this.constructor = d; }\r\n    __.prototype = b.prototype;\r\n    d.prototype = new __();\r\n};\r\ndefine('app/views/MenuView',[\"require\", \"exports\", './BaseView', '../../lib/mtx3/mtx3'], function (require, exports, BaseView_1, mtx3_1) {\r\n    var MenuView = (function (_super) {\r\n        __extends(MenuView, _super);\r\n        function MenuView() {\r\n            var _this = this;\r\n            _super.apply(this, arguments);\r\n            this._isActive = false;\r\n            this.displayMenu = function () {\r\n                new mtx3_1.Tween()\r\n                    .duration(MenuView.TWEEN_DURATION)\r\n                    .easing(mtx3_1.TweenEasing.LINEAR)\r\n                    .element(_this._container)\r\n                    .translate({\r\n                    x: (_this._isActive ? 0 : window.innerWidth * -1),\r\n                    y: 0,\r\n                    z: 0\r\n                })\r\n                    .start();\r\n                new mtx3_1.Tween()\r\n                    .duration(MenuView.TWEEN_DURATION)\r\n                    .easing(mtx3_1.TweenEasing.LINEAR)\r\n                    .element(_this._elemSectionMain)\r\n                    .translate({\r\n                    x: (_this._isActive ? window.innerWidth * 0.75 : 0),\r\n                    y: 0,\r\n                    z: 0\r\n                })\r\n                    .complete(function () {\r\n                    if (_this._isActive) {\r\n                        var e = _this._elemSectionMain;\r\n                        e.focus();\r\n                    }\r\n                })\r\n                    .start();\r\n                new mtx3_1.Tween()\r\n                    .duration(MenuView.TWEEN_DURATION)\r\n                    .easing(mtx3_1.TweenEasing.LINEAR)\r\n                    .element(_this._elemSectionNav)\r\n                    .translate({\r\n                    x: (_this._isActive ? window.innerWidth * 0.75 : 0),\r\n                    y: 0,\r\n                    z: 0\r\n                })\r\n                    .start();\r\n            };\r\n            this.displayAlerts = function (visible) {\r\n                //let disp: string = DomUtils.getStyleValue(\r\n                //    <HTMLElement>this._container.querySelector('.option.optional[data-menu-option=\"alerts\"]'),\r\n                //    'display');\r\n                new mtx3_1.Tween()\r\n                    .duration(MenuView.TWEEN_DURATION)\r\n                    .easing(mtx3_1.TweenEasing.LINEAR)\r\n                    .element(_this._elemSectionAlert)\r\n                    .translate({\r\n                    x: (visible ? 0 : window.innerWidth * -1),\r\n                    y: 0,\r\n                    z: 0\r\n                })\r\n                    .start();\r\n            };\r\n            this.displayMap = function (visible) {\r\n                var elem = document.querySelector('.mtx3-metro .section-map');\r\n                if (visible) {\r\n                    mtx3_1.DomUtils.addClass(elem, 'show');\r\n                }\r\n                new mtx3_1.Tween()\r\n                    .duration(MenuView.TWEEN_DURATION)\r\n                    .easing(mtx3_1.TweenEasing.LINEAR)\r\n                    .element(elem)\r\n                    .style('opacity', visible ? 1 : 0)\r\n                    .complete(function () {\r\n                    if (!visible) {\r\n                        mtx3_1.DomUtils.removeClass(elem, 'show');\r\n                    }\r\n                })\r\n                    .start();\r\n            };\r\n            this.displayInfo = function (visible, section) {\r\n                var sel = '.mtx3-metro .section-info .', elem = null;\r\n                if (section) {\r\n                    sel += section;\r\n                    elem = document.querySelector(sel);\r\n                }\r\n                new mtx3_1.Tween()\r\n                    .duration(MenuView.TWEEN_DURATION)\r\n                    .easing(mtx3_1.TweenEasing.LINEAR)\r\n                    .element(_this._elemSectionInfo)\r\n                    .translate({\r\n                    x: (visible ? 0 : window.innerWidth * -1),\r\n                    y: 0,\r\n                    z: 0\r\n                })\r\n                    .complete(function () {\r\n                    if (!visible) {\r\n                        mtx3_1.DomUtils.style(_this._elemSectionInfo.querySelector('.info-about'), { opacity: 0 });\r\n                        mtx3_1.DomUtils.style(_this._elemSectionInfo.querySelector('.info-usage'), { opacity: 0 });\r\n                    }\r\n                })\r\n                    .start();\r\n                if (elem) {\r\n                    new mtx3_1.Tween()\r\n                        .duration(MenuView.TWEEN_DURATION)\r\n                        .easing(mtx3_1.TweenEasing.LINEAR)\r\n                        .element(elem)\r\n                        .style('opacity', visible ? 1 : 0)\r\n                        .start();\r\n                }\r\n            };\r\n            this.handleClickEvents = function (evt) {\r\n                switch (evt.currentTarget.dataset['menuOption']) {\r\n                    case 'about':\r\n                        _this._isActive = !_this._isActive;\r\n                        _this.displayInfo(true, 'info-about');\r\n                        _this.displayMap(false);\r\n                        _this.displayMenu();\r\n                        break;\r\n                    case 'alerts':\r\n                        _this._isActive = !_this._isActive;\r\n                        _this.displayAlerts(true);\r\n                        _this.displayMenu();\r\n                        break;\r\n                    case 'map':\r\n                        _this._isActive = !_this._isActive;\r\n                        _this.displayMap(true);\r\n                        _this.displayMenu();\r\n                        break;\r\n                    case 'usage':\r\n                        _this._isActive = !_this._isActive;\r\n                        _this.displayInfo(true, 'info-usage');\r\n                        _this.displayMap(false);\r\n                        _this.displayMenu();\r\n                        break;\r\n                    case 'prediction':\r\n                        _this._isActive = !_this._isActive;\r\n                        _this.displayMap(false);\r\n                        _this.displayMenu();\r\n                        break;\r\n                    default:\r\n                        _this._isActive = !_this._isActive;\r\n                        _this.displayMenu();\r\n                        _this.displayAlerts(false);\r\n                        _this.displayInfo(false);\r\n                        _this.displayMap(false);\r\n                }\r\n            };\r\n        }\r\n        MenuView.prototype.render = function () {\r\n            this._elemSectionAlert = document.querySelector('.mtx3-metro .section-alerts');\r\n            this._elemSectionMain = document.querySelector('.section-main');\r\n            this._elemSectionNav = document.querySelector('.section-navigation');\r\n            this._elemSectionInfo = document.querySelector('.mtx3-metro .section-info');\r\n            mtx3_1.DomUtils.addListener(document.querySelector('.mtx3-metro .header-button'), 'click', this.handleClickEvents);\r\n            mtx3_1.DomUtils.addListener(this._container.querySelectorAll('.section-menu .menu .option'), 'click', this.handleClickEvents);\r\n            return this;\r\n        };\r\n        MenuView.prototype.start = function () {\r\n            return this;\r\n        };\r\n        MenuView.TWEEN_DURATION = 300;\r\n        return MenuView;\r\n    })(BaseView_1.BaseView);\r\n    exports.MenuView = MenuView;\r\n    ;\r\n});\r\n//# sourceMappingURL=MenuView.js.map;\n",
    "'use strict';\r\ndefine('app/models/ModelIncidents',[\"require\", \"exports\"], function (require, exports) {\r\n    var ModelIncidents = (function () {\r\n        function ModelIncidents() {\r\n        }\r\n        return ModelIncidents;\r\n    })();\r\n    exports.ModelIncidents = ModelIncidents;\r\n});\r\n//# sourceMappingURL=ModelIncidents.js.map;\n",
    "'use strict';\r\ndefine('app/models/ModelLines',[\"require\", \"exports\"], function (require, exports) {\r\n    var ModelLines = (function () {\r\n        function ModelLines() {\r\n            this.lines = [\r\n                { code: \"BL\", name: \"Blue\" },\r\n                { code: \"GR\", name: \"Green\" },\r\n                { code: \"OR\", name: \"Orange\" },\r\n                { code: \"RD\", name: \"Red\" },\r\n                { code: \"SV\", name: \"Silver\" },\r\n                { code: \"YL\", name: \"Yellow\" }\r\n            ];\r\n        }\r\n        return ModelLines;\r\n    })();\r\n    exports.ModelLines = ModelLines;\r\n});\r\n//# sourceMappingURL=ModelLines.js.map;\n",
    "'use strict';\r\ndefine('app/models/ModelPredictions',[\"require\", \"exports\"], function (require, exports) {\r\n    var ModelPredictions = (function () {\r\n        function ModelPredictions() {\r\n        }\r\n        return ModelPredictions;\r\n    })();\r\n    exports.ModelPredictions = ModelPredictions;\r\n});\r\n//# sourceMappingURL=ModelPredictions.js.map;\n",
    "'use strict';\r\ndefine('app/models/ModelStations',[\"require\", \"exports\"], function (require, exports) {\r\n    var ModelStations = (function () {\r\n        function ModelStations() {\r\n            var _this = this;\r\n            this.stationMap = {};\r\n            this.stationUniqueMap = {};\r\n            this.createMap = function () {\r\n                var key;\r\n                for (key in _this.stations) {\r\n                    if (_this.stations.hasOwnProperty(key)) {\r\n                        _this.stations[key].Stations.forEach(function (station) {\r\n                            if (!_this.stationMap[station.Code]) {\r\n                                _this.stationMap[station.Code] = {\r\n                                    code: station.Code,\r\n                                    name: station.Name,\r\n                                    line: key\r\n                                };\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            this.stations = {\r\n                BL: {\r\n                    \"Stations\": [\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Springfield\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"6880 Frontier Drive\",\r\n                                \"Zip\": \"22150\"\r\n                            },\r\n                            \"Code\": \"J03\",\r\n                            \"Lat\": 38.7665218926,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.1679701804,\r\n                            \"Name\": \"Franconia-Springf'ld\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Alexandria\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"5690 Eisenhower Avenue\",\r\n                                \"Zip\": \"22310\"\r\n                            },\r\n                            \"Code\": \"J02\",\r\n                            \"Lat\": 38.799307672,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.1291115237,\r\n                            \"Name\": \"Van Dorn St\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Alexandria\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"1900 King Street\",\r\n                                \"Zip\": \"22301\"\r\n                            },\r\n                            \"Code\": \"C13\",\r\n                            \"Lat\": 38.8065861172,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0608112085,\r\n                            \"Name\": \"King Street\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Alexandria\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"700 N. West St.\",\r\n                                \"Zip\": \"22301\"\r\n                            },\r\n                            \"Code\": \"C12\",\r\n                            \"Lat\": 38.8141436672,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.053667574,\r\n                            \"Name\": \"Braddock Road\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"2400 S. Smith Blvd.\",\r\n                                \"Zip\": \"22202\"\r\n                            },\r\n                            \"Code\": \"C10\",\r\n                            \"Lat\": 38.8534163859,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0440422943,\r\n                            \"Name\": \"National Arpt\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"1750 South Clark St.\",\r\n                                \"Zip\": \"22202\"\r\n                            },\r\n                            \"Code\": \"C09\",\r\n                            \"Lat\": 38.8579043204,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0502898097,\r\n                            \"Name\": \"Crystal City\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"1250 South Hayes St.\",\r\n                                \"Zip\": \"22202\"\r\n                            },\r\n                            \"Code\": \"C08\",\r\n                            \"Lat\": 38.8618823867,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0595389215,\r\n                            \"Name\": \"Pentagon City\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"2 South Rotary Road\",\r\n                                \"Zip\": \"22202\"\r\n                            },\r\n                            \"Code\": \"C07\",\r\n                            \"Lat\": 38.8694627012,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0537156734,\r\n                            \"Name\": \"Pentagon\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"1000 North Memorial Drive\",\r\n                                \"Zip\": \"22211\"\r\n                            },\r\n                            \"Code\": \"C06\",\r\n                            \"Lat\": 38.8846868585,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0628101291,\r\n                            \"Name\": \"Arlington Cemetery\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"1850 N. Moore Street\",\r\n                                \"Zip\": \"22209\"\r\n                            },\r\n                            \"Code\": \"C05\",\r\n                            \"Lat\": 38.8959790962,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0709086853,\r\n                            \"Name\": \"Rosslyn\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"2301 I St. NW\",\r\n                                \"Zip\": \"20037\"\r\n                            },\r\n                            \"Code\": \"C04\",\r\n                            \"Lat\": 38.9006980092,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.050277739,\r\n                            \"Name\": \"Foggy Bottom\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"900 18th St. NW\",\r\n                                \"Zip\": \"20006\"\r\n                            },\r\n                            \"Code\": \"C03\",\r\n                            \"Lat\": 38.9013128941,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0406954151,\r\n                            \"Name\": \"Farragut West\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"1400 I St. NW\",\r\n                                \"Zip\": \"20005\"\r\n                            },\r\n                            \"Code\": \"C02\",\r\n                            \"Lat\": 38.9013327968,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0336341721,\r\n                            \"Name\": \"McPherson Square\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"607 13th St. NW\",\r\n                                \"Zip\": \"20005\"\r\n                            },\r\n                            \"Code\": \"C01\",\r\n                            \"Lat\": 38.8983144732,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0280779971,\r\n                            \"Name\": \"Metro Center\",\r\n                            \"StationTogether1\": \"A01\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"302 12th St. NW\",\r\n                                \"Zip\": \"20004\"\r\n                            },\r\n                            \"Code\": \"D01\",\r\n                            \"Lat\": 38.8931808718,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0281319984,\r\n                            \"Name\": \"Federal Triangle\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"1200 Independence Avenue SW\",\r\n                                \"Zip\": \"20004\"\r\n                            },\r\n                            \"Code\": \"D02\",\r\n                            \"Lat\": 38.888018702,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0280662342,\r\n                            \"Name\": \"Smithsonian\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"600 Maryland Avenue SW\",\r\n                                \"Zip\": \"20024\"\r\n                            },\r\n                            \"Code\": \"D03\",\r\n                            \"Lat\": 38.8848377279,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.021908484,\r\n                            \"Name\": \"L'Enfant Plaza\",\r\n                            \"StationTogether1\": \"F03\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"401 3rd Street SW\",\r\n                                \"Zip\": \"20024\"\r\n                            },\r\n                            \"Code\": \"D04\",\r\n                            \"Lat\": 38.8850723551,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0158682169,\r\n                            \"Name\": \"Federal Center SW\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"355 First Street SE\",\r\n                                \"Zip\": \"20003\"\r\n                            },\r\n                            \"Code\": \"D05\",\r\n                            \"Lat\": 38.8850625009,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0051394199,\r\n                            \"Name\": \"Capitol South\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"701 Pennsylvania Avenue SE\",\r\n                                \"Zip\": \"20003\"\r\n                            },\r\n                            \"Code\": \"D06\",\r\n                            \"Lat\": 38.8846222608,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9960011267,\r\n                            \"Name\": \"Eastern Market\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"700 14th Street SE\",\r\n                                \"Zip\": \"20003\"\r\n                            },\r\n                            \"Code\": \"D07\",\r\n                            \"Lat\": 38.8812632736,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9854953196,\r\n                            \"Name\": \"Potomac Avenue\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"192 19th St. SE\",\r\n                                \"Zip\": \"20003\"\r\n                            },\r\n                            \"Code\": \"D08\",\r\n                            \"Lat\": 38.8867090898,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9770889014,\r\n                            \"Name\": \"Stadium Armory\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"4500 Benning Road\",\r\n                                \"Zip\": \"20019\"\r\n                            },\r\n                            \"Code\": \"G01\",\r\n                            \"Lat\": 38.890975676,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9383648681,\r\n                            \"Name\": \"Benning Road\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Capitol Heights\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"133 Central Avenue\",\r\n                                \"Zip\": \"20743\"\r\n                            },\r\n                            \"Code\": \"G02\",\r\n                            \"Lat\": 38.8894658568,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9118081145,\r\n                            \"Name\": \"Capitol Heights\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Capitol Heights\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"100 Addison Road S.\",\r\n                                \"Zip\": \"20743\"\r\n                            },\r\n                            \"Code\": \"G03\",\r\n                            \"Lat\": 38.8867478168,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.89410791,\r\n                            \"Name\": \"Addison Road\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Landover\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"300 Garrett Morgan Blvd.\",\r\n                                \"Zip\": \"20785\"\r\n                            },\r\n                            \"Code\": \"G04\",\r\n                            \"Lat\": 38.8938349282,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.8680747681,\r\n                            \"Name\": \"Morgan Blvd\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Largo\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"Largo Town Center 9000 Lottsford Road\",\r\n                                \"Zip\": \"20774\"\r\n                            },\r\n                            \"Code\": \"G05\",\r\n                            \"Lat\": 38.9050688072,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.8420375202,\r\n                            \"Name\": \"Largo Town Center\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        }\r\n                    ]\r\n                },\r\n                GR: {\r\n                    \"Stations\": [\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Suitland\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"4704 Old Soper Road\",\r\n                                \"Zip\": \"20746\"\r\n                            },\r\n                            \"Code\": \"F11\",\r\n                            \"Lat\": 38.8264463483,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9114642177,\r\n                            \"Name\": \"Branch Avenue\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Suitland\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"4500 Silver Hill Road\",\r\n                                \"Zip\": \"20746\"\r\n                            },\r\n                            \"Code\": \"F10\",\r\n                            \"Lat\": 38.8439645544,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9318701589,\r\n                            \"Name\": \"Suitland\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Temple Hills\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"3101 Branch Avenue\",\r\n                                \"Zip\": \"20748\"\r\n                            },\r\n                            \"Code\": \"F09\",\r\n                            \"Lat\": 38.8513013835,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9562627094,\r\n                            \"Name\": \"Naylor Road\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Temple Hills\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"1411 Southern Avenue\",\r\n                                \"Zip\": \"20748\"\r\n                            },\r\n                            \"Code\": \"F08\",\r\n                            \"Lat\": 38.8410857803,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9750541388,\r\n                            \"Name\": \"Southern Ave\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"1290 Alabama Avenue SE\",\r\n                                \"Zip\": \"20020\"\r\n                            },\r\n                            \"Code\": \"F07\",\r\n                            \"Lat\": 38.8456577028,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9885119326,\r\n                            \"Name\": \"Congress Height\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"1101 Howard Road SE\",\r\n                                \"Zip\": \"20020\"\r\n                            },\r\n                            \"Code\": \"F06\",\r\n                            \"Lat\": 38.8629631168,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9953707387,\r\n                            \"Name\": \"Anacostia\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"200 M Street SE\",\r\n                                \"Zip\": \"20003\"\r\n                            },\r\n                            \"Code\": \"F05\",\r\n                            \"Lat\": 38.8764810849,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0050856513,\r\n                            \"Name\": \"Navy Yard\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"399 M Street SW\",\r\n                                \"Zip\": \"20024\"\r\n                            },\r\n                            \"Code\": \"F04\",\r\n                            \"Lat\": 38.8764618668,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0175052088,\r\n                            \"Name\": \"Waterfront\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"600 Maryland Avenue SW\",\r\n                                \"Zip\": \"20024\"\r\n                            },\r\n                            \"Code\": \"F03\",\r\n                            \"Lat\": 38.8848377279,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.021908484,\r\n                            \"Name\": \"L'Enfant Plaza\",\r\n                            \"StationTogether1\": \"D03\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"701 Pennsylvania Avenue NW\",\r\n                                \"Zip\": \"20004\"\r\n                            },\r\n                            \"Code\": \"F02\",\r\n                            \"Lat\": 38.8936652235,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0219143879,\r\n                            \"Name\": \"Archives\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"630 H St. NW\",\r\n                                \"Zip\": \"20001\"\r\n                            },\r\n                            \"Code\": \"F01\",\r\n                            \"Lat\": 38.8983168097,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0219153904,\r\n                            \"Name\": \"Gallery Place\",\r\n                            \"StationTogether1\": \"B01\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"700 M St. NW\",\r\n                                \"Zip\": \"20001\"\r\n                            },\r\n                            \"Code\": \"E01\",\r\n                            \"Lat\": 38.9064368149,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0219143803,\r\n                            \"Name\": \"Mt Vernon Sq\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"1701 8th St. NW\",\r\n                                \"Zip\": \"20001\"\r\n                            },\r\n                            \"Code\": \"E02\",\r\n                            \"Lat\": 38.9134768711,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0219117007,\r\n                            \"Name\": \"Shaw\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"1240 U Street NW\",\r\n                                \"Zip\": \"20009\"\r\n                            },\r\n                            \"Code\": \"E03\",\r\n                            \"Lat\": 38.9170023992,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0274958929,\r\n                            \"Name\": \"U Street\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"3030 14th St. NW\",\r\n                                \"Zip\": \"20009\"\r\n                            },\r\n                            \"Code\": \"E04\",\r\n                            \"Lat\": 38.9278379675,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0325521177,\r\n                            \"Name\": \"Columbia Heights\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"3700 Georgia Avenue NW\",\r\n                                \"Zip\": \"20010\"\r\n                            },\r\n                            \"Code\": \"E05\",\r\n                            \"Lat\": 38.9374346301,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.023460904,\r\n                            \"Name\": \"Georgia Avenue\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"550 Galloway Street NE\",\r\n                                \"Zip\": \"20011\"\r\n                            },\r\n                            \"Code\": \"E06\",\r\n                            \"Lat\": 38.9518467675,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0022030768,\r\n                            \"Name\": \"Fort Totten\",\r\n                            \"StationTogether1\": \"B06\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Hyattsville\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"2700 Hamilton St.\",\r\n                                \"Zip\": \"20782\"\r\n                            },\r\n                            \"Code\": \"E07\",\r\n                            \"Lat\": 38.9550401707,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9695766751,\r\n                            \"Name\": \"West Hyattsville\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Hyattsville\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"3575 East West Highway\",\r\n                                \"Zip\": \"20782\"\r\n                            },\r\n                            \"Code\": \"E08\",\r\n                            \"Lat\": 38.9653854458,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9558815078,\r\n                            \"Name\": \"Prince Georges Plaza\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"College Park\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"4931 Calvert Road\",\r\n                                \"Zip\": \"20740\"\r\n                            },\r\n                            \"Code\": \"E09\",\r\n                            \"Lat\": 38.9786336339,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9281249818,\r\n                            \"Name\": \"College Park\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Greenbelt\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"5717 Greenbelt Metro Drive\",\r\n                                \"Zip\": \"20740\"\r\n                            },\r\n                            \"Code\": \"E10\",\r\n                            \"Lat\": 39.0111458605,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9110575731,\r\n                            \"Name\": \"Greenbelt\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        }\r\n                    ]\r\n                },\r\n                OR: {\r\n                    \"Stations\": [\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Fairfax\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"9550 Saintsbury Drive\",\r\n                                \"Zip\": \"22031\"\r\n                            },\r\n                            \"Code\": \"K08\",\r\n                            \"Lat\": 38.8776011238,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.2726222569,\r\n                            \"Name\": \"Vienna\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Vienna\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"2700 Gallows Road\",\r\n                                \"Zip\": \"22180\"\r\n                            },\r\n                            \"Code\": \"K07\",\r\n                            \"Lat\": 38.8836251359,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.2271606721,\r\n                            \"Name\": \"Dunn Loring\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Falls Church\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"7040 Haycock Road\",\r\n                                \"Zip\": \"22043\"\r\n                            },\r\n                            \"Code\": \"K06\",\r\n                            \"Lat\": 38.900780551,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.1890948225,\r\n                            \"Name\": \"W Falls Church\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"2001 N. Sycamore St.\",\r\n                                \"Zip\": \"22205\"\r\n                            },\r\n                            \"Code\": \"K05\",\r\n                            \"Lat\": 38.8859531663,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.1568830199,\r\n                            \"Name\": \"E Falls Church\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"4230 Fairfax Drive\",\r\n                                \"Zip\": \"22201\"\r\n                            },\r\n                            \"Code\": \"K04\",\r\n                            \"Lat\": 38.8821828738,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.113168835,\r\n                            \"Name\": \"Ballston\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"3600 Fairfax Drive\",\r\n                                \"Zip\": \"22201\"\r\n                            },\r\n                            \"Code\": \"K03\",\r\n                            \"Lat\": 38.8833661518,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.1029772942,\r\n                            \"Name\": \"Virginia Square\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"3100 Wilson Blvd\",\r\n                                \"Zip\": \"22201\"\r\n                            },\r\n                            \"Code\": \"K02\",\r\n                            \"Lat\": 38.886704839,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0953940983,\r\n                            \"Name\": \"Clarendon\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"2100 Wilson Blvd\",\r\n                                \"Zip\": \"22201\"\r\n                            },\r\n                            \"Code\": \"K01\",\r\n                            \"Lat\": 38.8901755312,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.087131231,\r\n                            \"Name\": \"Court House\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"1850 N. Moore Street\",\r\n                                \"Zip\": \"22209\"\r\n                            },\r\n                            \"Code\": \"C05\",\r\n                            \"Lat\": 38.8959790962,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0709086853,\r\n                            \"Name\": \"Rosslyn\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"2301 I St. NW\",\r\n                                \"Zip\": \"20037\"\r\n                            },\r\n                            \"Code\": \"C04\",\r\n                            \"Lat\": 38.9006980092,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.050277739,\r\n                            \"Name\": \"Foggy Bottom\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"900 18th St. NW\",\r\n                                \"Zip\": \"20006\"\r\n                            },\r\n                            \"Code\": \"C03\",\r\n                            \"Lat\": 38.9013128941,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0406954151,\r\n                            \"Name\": \"Farragut West\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"1400 I St. NW\",\r\n                                \"Zip\": \"20005\"\r\n                            },\r\n                            \"Code\": \"C02\",\r\n                            \"Lat\": 38.9013327968,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0336341721,\r\n                            \"Name\": \"McPherson Square\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"607 13th St. NW\",\r\n                                \"Zip\": \"20005\"\r\n                            },\r\n                            \"Code\": \"C01\",\r\n                            \"Lat\": 38.8983144732,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0280779971,\r\n                            \"Name\": \"Metro Center\",\r\n                            \"StationTogether1\": \"A01\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"302 12th St. NW\",\r\n                                \"Zip\": \"20004\"\r\n                            },\r\n                            \"Code\": \"D01\",\r\n                            \"Lat\": 38.8931808718,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0281319984,\r\n                            \"Name\": \"Federal Triangle\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"1200 Independence Avenue SW\",\r\n                                \"Zip\": \"20004\"\r\n                            },\r\n                            \"Code\": \"D02\",\r\n                            \"Lat\": 38.888018702,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0280662342,\r\n                            \"Name\": \"Smithsonian\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"600 Maryland Avenue SW\",\r\n                                \"Zip\": \"20024\"\r\n                            },\r\n                            \"Code\": \"D03\",\r\n                            \"Lat\": 38.8848377279,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.021908484,\r\n                            \"Name\": \"L'Enfant Plaza\",\r\n                            \"StationTogether1\": \"F03\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"401 3rd Street SW\",\r\n                                \"Zip\": \"20024\"\r\n                            },\r\n                            \"Code\": \"D04\",\r\n                            \"Lat\": 38.8850723551,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0158682169,\r\n                            \"Name\": \"Federal Center SW\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"355 First Street SE\",\r\n                                \"Zip\": \"20003\"\r\n                            },\r\n                            \"Code\": \"D05\",\r\n                            \"Lat\": 38.8850625009,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0051394199,\r\n                            \"Name\": \"Capitol South\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"701 Pennsylvania Avenue SE\",\r\n                                \"Zip\": \"20003\"\r\n                            },\r\n                            \"Code\": \"D06\",\r\n                            \"Lat\": 38.8846222608,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9960011267,\r\n                            \"Name\": \"Eastern Market\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"700 14th Street SE\",\r\n                                \"Zip\": \"20003\"\r\n                            },\r\n                            \"Code\": \"D07\",\r\n                            \"Lat\": 38.8812632736,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9854953196,\r\n                            \"Name\": \"Potomac Avenue\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"192 19th St. SE\",\r\n                                \"Zip\": \"20003\"\r\n                            },\r\n                            \"Code\": \"D08\",\r\n                            \"Lat\": 38.8867090898,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9770889014,\r\n                            \"Name\": \"Stadium Armory\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"4000 Minnesota Avenue NE\",\r\n                                \"Zip\": \"20019\"\r\n                            },\r\n                            \"Code\": \"D09\",\r\n                            \"Lat\": 38.899191223,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9467477336,\r\n                            \"Name\": \"Minnesota Avenue\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"4720 Minnesota Avenue NE\",\r\n                                \"Zip\": \"20019\"\r\n                            },\r\n                            \"Code\": \"D10\",\r\n                            \"Lat\": 38.9081784965,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.935256783,\r\n                            \"Name\": \"Deanwood\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Cheverly\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"5501 Columbia Park\",\r\n                                \"Zip\": \"20785\"\r\n                            },\r\n                            \"Code\": \"D11\",\r\n                            \"Lat\": 38.9166318546,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.916628044,\r\n                            \"Name\": \"Cheverly\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Hyattsville\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"3000 Pennsy Drive\",\r\n                                \"Zip\": \"20785\"\r\n                            },\r\n                            \"Code\": \"D12\",\r\n                            \"Lat\": 38.9335062344,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.8911979676,\r\n                            \"Name\": \"Landover\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"New Carrollton\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"4700 Garden City Drive\",\r\n                                \"Zip\": \"20784\"\r\n                            },\r\n                            \"Code\": \"D13\",\r\n                            \"Lat\": 38.9477848558,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.8718412865,\r\n                            \"Name\": \"New Carrollton\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        }\r\n                    ]\r\n                },\r\n                RD: {\r\n                    \"Stations\": [\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Rockville\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"15903 Somerville Drive\",\r\n                                \"Zip\": \"20855\"\r\n                            },\r\n                            \"Code\": \"A15\",\r\n                            \"Lat\": 39.1199273249,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.1646273343,\r\n                            \"Name\": \"Shady Grove\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Rockville\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"251 Hungerford Drive\",\r\n                                \"Zip\": \"20850\"\r\n                            },\r\n                            \"Code\": \"A14\",\r\n                            \"Lat\": 39.0843216075,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.1461253392,\r\n                            \"Name\": \"Rockville\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Rockville\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"1600 Chapman Avenue\",\r\n                                \"Zip\": \"20852\"\r\n                            },\r\n                            \"Code\": \"A13\",\r\n                            \"Lat\": 39.0624676517,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.1208179517,\r\n                            \"Name\": \"Twinbrook\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Rockville\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"5500 Marinelli Road\",\r\n                                \"Zip\": \"20852\"\r\n                            },\r\n                            \"Code\": \"A12\",\r\n                            \"Lat\": 39.0481513573,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.112829859,\r\n                            \"Name\": \"White Flint\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Bethesda\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"10300 Rockville Pike\",\r\n                                \"Zip\": \"20852\"\r\n                            },\r\n                            \"Code\": \"A11\",\r\n                            \"Lat\": 39.02926895,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.10384972,\r\n                            \"Name\": \"Grosvenor\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Bethesda\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"8810 Rockville Pike\",\r\n                                \"Zip\": \"20814\"\r\n                            },\r\n                            \"Code\": \"A10\",\r\n                            \"Lat\": 39.0000564843,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0969522905,\r\n                            \"Name\": \"Medical Center\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Bethesda\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"7450 Wisconsin Avenue\",\r\n                                \"Zip\": \"20814\"\r\n                            },\r\n                            \"Code\": \"A09\",\r\n                            \"Lat\": 38.9843936603,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0941291922,\r\n                            \"Name\": \"Bethesda\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"5337 Wisconsin Avenue NW\",\r\n                                \"Zip\": \"20015\"\r\n                            },\r\n                            \"Code\": \"A08\",\r\n                            \"Lat\": 38.9594838736,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.084995805,\r\n                            \"Name\": \"Friendship Heights\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"4501 Wisconsin Avenue NW\",\r\n                                \"Zip\": \"20016\"\r\n                            },\r\n                            \"Code\": \"A07\",\r\n                            \"Lat\": 38.9488514351,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0795873255,\r\n                            \"Name\": \"Tenleytown\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"4200 Connecticut Avenue NW\",\r\n                                \"Zip\": \"20008\"\r\n                            },\r\n                            \"Code\": \"A06\",\r\n                            \"Lat\": 38.9432652883,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0629861805,\r\n                            \"Name\": \"Van Ness UDC\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"3599 Connecticut Avenue NW\",\r\n                                \"Zip\": \"20008\"\r\n                            },\r\n                            \"Code\": \"A05\",\r\n                            \"Lat\": 38.9347628908,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0580425191,\r\n                            \"Name\": \"Cleveland Park\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"2700 Connecticut Ave., NW\",\r\n                                \"Zip\": \"20008\"\r\n                            },\r\n                            \"Code\": \"A04\",\r\n                            \"Lat\": 38.9250851371,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0524180207,\r\n                            \"Name\": \"Woodley Park Zoo\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"1525 20th St. NW\",\r\n                                \"Zip\": \"20036\"\r\n                            },\r\n                            \"Code\": \"A03\",\r\n                            \"Lat\": 38.9095980575,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0434143597,\r\n                            \"Name\": \"Dupont Circle\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"1001 Connecticut Avenue NW\",\r\n                                \"Zip\": \"20036\"\r\n                            },\r\n                            \"Code\": \"A02\",\r\n                            \"Lat\": 38.9032019462,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0397008272,\r\n                            \"Name\": \"Farragut North\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"607 13th St. NW\",\r\n                                \"Zip\": \"20005\"\r\n                            },\r\n                            \"Code\": \"A01\",\r\n                            \"Lat\": 38.8983144732,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0280779971,\r\n                            \"Name\": \"Metro Center\",\r\n                            \"StationTogether1\": \"C01\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"630 H St. NW\",\r\n                                \"Zip\": \"20001\"\r\n                            },\r\n                            \"Code\": \"B01\",\r\n                            \"Lat\": 38.8983168097,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0219153904,\r\n                            \"Name\": \"Gallery Place\",\r\n                            \"StationTogether1\": \"F01\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"450 F Street NW\",\r\n                                \"Zip\": \"20001\"\r\n                            },\r\n                            \"Code\": \"B02\",\r\n                            \"Lat\": 38.8960903176,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0166389566,\r\n                            \"Name\": \"Judiciary Square\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"701 First St. NE\",\r\n                                \"Zip\": \"20002\"\r\n                            },\r\n                            \"Code\": \"B03\",\r\n                            \"Lat\": 38.8977660392,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0074142921,\r\n                            \"Name\": \"Union Station\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"200 Florida Ave N.E.\",\r\n                                \"Zip\": \"20002\"\r\n                            },\r\n                            \"Code\": \"B35\",\r\n                            \"Lat\": 38.9070162121,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0030204472,\r\n                            \"Name\": \"New York Avenue\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"919 Rhode Island Avenue NE\",\r\n                                \"Zip\": \"20018\"\r\n                            },\r\n                            \"Code\": \"B04\",\r\n                            \"Lat\": 38.9210596891,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9959369166,\r\n                            \"Name\": \"Rhode Island Avenue\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"801 Michigan Avenue NE\",\r\n                                \"Zip\": \"20017\"\r\n                            },\r\n                            \"Code\": \"B05\",\r\n                            \"Lat\": 38.9332109913,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9945342851,\r\n                            \"Name\": \"Brookland\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"550 Galloway Street NE\",\r\n                                \"Zip\": \"20011\"\r\n                            },\r\n                            \"Code\": \"B06\",\r\n                            \"Lat\": 38.9518467675,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0022030768,\r\n                            \"Name\": \"Fort Totten\",\r\n                            \"StationTogether1\": \"E06\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"327 Cedar Street NW\",\r\n                                \"Zip\": \"20012\"\r\n                            },\r\n                            \"Code\": \"B07\",\r\n                            \"Lat\": 38.976078531,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0181766987,\r\n                            \"Name\": \"Takoma\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Silver Spring\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"8400 Colesville Road\",\r\n                                \"Zip\": \"20910\"\r\n                            },\r\n                            \"Code\": \"B08\",\r\n                            \"Lat\": 38.9939493747,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0310178268,\r\n                            \"Name\": \"Silver Spring\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Forest Glen\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"9730 Georgia Avenue\",\r\n                                \"Zip\": \"20910\"\r\n                            },\r\n                            \"Code\": \"B09\",\r\n                            \"Lat\": 39.0149542752,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0429165548,\r\n                            \"Name\": \"Forest Glen\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Silver Spring\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"11171 Georgia Avenue\",\r\n                                \"Zip\": \"20902\"\r\n                            },\r\n                            \"Code\": \"B10\",\r\n                            \"Lat\": 39.0375271436,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0501070535,\r\n                            \"Name\": \"Wheaton\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Silver Spring\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"12501 Georgia Avenue\",\r\n                                \"Zip\": \"20906\"\r\n                            },\r\n                            \"Code\": \"B11\",\r\n                            \"Lat\": 39.0617837655,\r\n                            \"LineCode1\": \"RD\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0535573593,\r\n                            \"Name\": \"Glenmont\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        }\r\n                    ]\r\n                },\r\n                SV: {\r\n                    \"Stations\": [\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Reston\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"1862 Wiehle Avenue\",\r\n                                \"Zip\": \"20190\"\r\n                            },\r\n                            \"Code\": \"N06\",\r\n                            \"Lat\": 38.94778,\r\n                            \"LineCode1\": \"SV\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.34027,\r\n                            \"Name\": \"Wiehle-Reston East\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Vienna\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"1576 Spring Hill Road\",\r\n                                \"Zip\": \"22182\"\r\n                            },\r\n                            \"Code\": \"N04\",\r\n                            \"Lat\": 38.928872,\r\n                            \"LineCode1\": \"SV\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.241472,\r\n                            \"Name\": \"Spring Hill\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Vienna\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"8305 Leesburg Pike\",\r\n                                \"Zip\": \"22182\"\r\n                            },\r\n                            \"Code\": \"N03\",\r\n                            \"Lat\": 38.921732,\r\n                            \"LineCode1\": \"SV\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.234607,\r\n                            \"Name\": \"Greensboro\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"McLean\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"1943 Chain Bridge Road\",\r\n                                \"Zip\": \"22102\"\r\n                            },\r\n                            \"Code\": \"N02\",\r\n                            \"Lat\": 38.920496,\r\n                            \"LineCode1\": \"SV\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.222262,\r\n                            \"Name\": \"Tysons Corner\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"McLean\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"1824 Dolley Madison Boulevard\",\r\n                                \"Zip\": \"22102\"\r\n                            },\r\n                            \"Code\": \"N01\",\r\n                            \"Lat\": 38.924432,\r\n                            \"LineCode1\": \"SV\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.210295,\r\n                            \"Name\": \"McLean\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"2001 N. Sycamore St.\",\r\n                                \"Zip\": \"22205\"\r\n                            },\r\n                            \"Code\": \"K05\",\r\n                            \"Lat\": 38.8859531663,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.1568830199,\r\n                            \"Name\": \"E Falls Church\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"4230 Fairfax Drive\",\r\n                                \"Zip\": \"22201\"\r\n                            },\r\n                            \"Code\": \"K04\",\r\n                            \"Lat\": 38.8821828738,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.113168835,\r\n                            \"Name\": \"Ballston\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"3600 Fairfax Drive\",\r\n                                \"Zip\": \"22201\"\r\n                            },\r\n                            \"Code\": \"K03\",\r\n                            \"Lat\": 38.8833661518,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.1029772942,\r\n                            \"Name\": \"Virginia Square\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"3100 Wilson Blvd\",\r\n                                \"Zip\": \"22201\"\r\n                            },\r\n                            \"Code\": \"K02\",\r\n                            \"Lat\": 38.886704839,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0953940983,\r\n                            \"Name\": \"Clarendon\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"2100 Wilson Blvd\",\r\n                                \"Zip\": \"22201\"\r\n                            },\r\n                            \"Code\": \"K01\",\r\n                            \"Lat\": 38.8901755312,\r\n                            \"LineCode1\": \"OR\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.087131231,\r\n                            \"Name\": \"Court House\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"1850 N. Moore Street\",\r\n                                \"Zip\": \"22209\"\r\n                            },\r\n                            \"Code\": \"C05\",\r\n                            \"Lat\": 38.8959790962,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0709086853,\r\n                            \"Name\": \"Rosslyn\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"2301 I St. NW\",\r\n                                \"Zip\": \"20037\"\r\n                            },\r\n                            \"Code\": \"C04\",\r\n                            \"Lat\": 38.9006980092,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.050277739,\r\n                            \"Name\": \"Foggy Bottom\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"900 18th St. NW\",\r\n                                \"Zip\": \"20006\"\r\n                            },\r\n                            \"Code\": \"C03\",\r\n                            \"Lat\": 38.9013128941,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0406954151,\r\n                            \"Name\": \"Farragut West\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"1400 I St. NW\",\r\n                                \"Zip\": \"20005\"\r\n                            },\r\n                            \"Code\": \"C02\",\r\n                            \"Lat\": 38.9013327968,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0336341721,\r\n                            \"Name\": \"McPherson Square\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"607 13th St. NW\",\r\n                                \"Zip\": \"20005\"\r\n                            },\r\n                            \"Code\": \"C01\",\r\n                            \"Lat\": 38.8983144732,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0280779971,\r\n                            \"Name\": \"Metro Center\",\r\n                            \"StationTogether1\": \"A01\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"302 12th St. NW\",\r\n                                \"Zip\": \"20004\"\r\n                            },\r\n                            \"Code\": \"D01\",\r\n                            \"Lat\": 38.8931808718,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0281319984,\r\n                            \"Name\": \"Federal Triangle\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"1200 Independence Avenue SW\",\r\n                                \"Zip\": \"20004\"\r\n                            },\r\n                            \"Code\": \"D02\",\r\n                            \"Lat\": 38.888018702,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0280662342,\r\n                            \"Name\": \"Smithsonian\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"600 Maryland Avenue SW\",\r\n                                \"Zip\": \"20024\"\r\n                            },\r\n                            \"Code\": \"D03\",\r\n                            \"Lat\": 38.8848377279,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.021908484,\r\n                            \"Name\": \"L'Enfant Plaza\",\r\n                            \"StationTogether1\": \"F03\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"401 3rd Street SW\",\r\n                                \"Zip\": \"20024\"\r\n                            },\r\n                            \"Code\": \"D04\",\r\n                            \"Lat\": 38.8850723551,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0158682169,\r\n                            \"Name\": \"Federal Center SW\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"355 First Street SE\",\r\n                                \"Zip\": \"20003\"\r\n                            },\r\n                            \"Code\": \"D05\",\r\n                            \"Lat\": 38.8850625009,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0051394199,\r\n                            \"Name\": \"Capitol South\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"701 Pennsylvania Avenue SE\",\r\n                                \"Zip\": \"20003\"\r\n                            },\r\n                            \"Code\": \"D06\",\r\n                            \"Lat\": 38.8846222608,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9960011267,\r\n                            \"Name\": \"Eastern Market\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"700 14th Street SE\",\r\n                                \"Zip\": \"20003\"\r\n                            },\r\n                            \"Code\": \"D07\",\r\n                            \"Lat\": 38.8812632736,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9854953196,\r\n                            \"Name\": \"Potomac Avenue\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"192 19th St. SE\",\r\n                                \"Zip\": \"20003\"\r\n                            },\r\n                            \"Code\": \"D08\",\r\n                            \"Lat\": 38.8867090898,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"OR\",\r\n                            \"LineCode3\": \"SV\",\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9770889014,\r\n                            \"Name\": \"Stadium Armory\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"4500 Benning Road\",\r\n                                \"Zip\": \"20019\"\r\n                            },\r\n                            \"Code\": \"G01\",\r\n                            \"Lat\": 38.890975676,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9383648681,\r\n                            \"Name\": \"Benning Road\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Capitol Heights\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"133 Central Avenue\",\r\n                                \"Zip\": \"20743\"\r\n                            },\r\n                            \"Code\": \"G02\",\r\n                            \"Lat\": 38.8894658568,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.9118081145,\r\n                            \"Name\": \"Capitol Heights\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Capitol Heights\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"100 Addison Road S.\",\r\n                                \"Zip\": \"20743\"\r\n                            },\r\n                            \"Code\": \"G03\",\r\n                            \"Lat\": 38.8867478168,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.89410791,\r\n                            \"Name\": \"Addison Road\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Landover\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"300 Garrett Morgan Blvd.\",\r\n                                \"Zip\": \"20785\"\r\n                            },\r\n                            \"Code\": \"G04\",\r\n                            \"Lat\": 38.8938349282,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.8680747681,\r\n                            \"Name\": \"Morgan Blvd\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Largo\",\r\n                                \"State\": \"MD\",\r\n                                \"Street\": \"Largo Town Center 9000 Lottsford Road\",\r\n                                \"Zip\": \"20774\"\r\n                            },\r\n                            \"Code\": \"G05\",\r\n                            \"Lat\": 38.9050688072,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"SV\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -76.8420375202,\r\n                            \"Name\": \"Largo Town Center\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        }\r\n                    ]\r\n                },\r\n                YL: {\r\n                    \"Stations\": [\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Huntington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"2501 Huntington Ave\",\r\n                                \"Zip\": \"22303\"\r\n                            },\r\n                            \"Code\": \"C15\",\r\n                            \"Lat\": 38.7939158529,\r\n                            \"LineCode1\": \"YL\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0752057891,\r\n                            \"Name\": \"Huntington\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Alexandria\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"2400 Eisenhower Avenue\",\r\n                                \"Zip\": \"22314\"\r\n                            },\r\n                            \"Code\": \"C14\",\r\n                            \"Lat\": 38.8004254497,\r\n                            \"LineCode1\": \"YL\",\r\n                            \"LineCode2\": null,\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0708743893,\r\n                            \"Name\": \"Eisenhower Avenue\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Alexandria\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"1900 King Street\",\r\n                                \"Zip\": \"22301\"\r\n                            },\r\n                            \"Code\": \"C13\",\r\n                            \"Lat\": 38.8065861172,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0608112085,\r\n                            \"Name\": \"King Street\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Alexandria\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"700 N. West St.\",\r\n                                \"Zip\": \"22301\"\r\n                            },\r\n                            \"Code\": \"C12\",\r\n                            \"Lat\": 38.8141436672,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.053667574,\r\n                            \"Name\": \"Braddock Road\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"2400 S. Smith Blvd.\",\r\n                                \"Zip\": \"22202\"\r\n                            },\r\n                            \"Code\": \"C10\",\r\n                            \"Lat\": 38.8534163859,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0440422943,\r\n                            \"Name\": \"National Arpt\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"1750 South Clark St.\",\r\n                                \"Zip\": \"22202\"\r\n                            },\r\n                            \"Code\": \"C09\",\r\n                            \"Lat\": 38.8579043204,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0502898097,\r\n                            \"Name\": \"Crystal City\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"1250 South Hayes St.\",\r\n                                \"Zip\": \"22202\"\r\n                            },\r\n                            \"Code\": \"C08\",\r\n                            \"Lat\": 38.8618823867,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0595389215,\r\n                            \"Name\": \"Pentagon City\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Arlington\",\r\n                                \"State\": \"VA\",\r\n                                \"Street\": \"2 South Rotary Road\",\r\n                                \"Zip\": \"22202\"\r\n                            },\r\n                            \"Code\": \"C07\",\r\n                            \"Lat\": 38.8694627012,\r\n                            \"LineCode1\": \"BL\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0537156734,\r\n                            \"Name\": \"Pentagon\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"600 Maryland Avenue SW\",\r\n                                \"Zip\": \"20024\"\r\n                            },\r\n                            \"Code\": \"F03\",\r\n                            \"Lat\": 38.8848377279,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.021908484,\r\n                            \"Name\": \"L'Enfant Plaza\",\r\n                            \"StationTogether1\": \"D03\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"701 Pennsylvania Avenue NW\",\r\n                                \"Zip\": \"20004\"\r\n                            },\r\n                            \"Code\": \"F02\",\r\n                            \"Lat\": 38.8936652235,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0219143879,\r\n                            \"Name\": \"Archives\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"630 H St. NW\",\r\n                                \"Zip\": \"20001\"\r\n                            },\r\n                            \"Code\": \"F01\",\r\n                            \"Lat\": 38.8983168097,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0219153904,\r\n                            \"Name\": \"Gallery Place\",\r\n                            \"StationTogether1\": \"B01\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"700 M St. NW\",\r\n                                \"Zip\": \"20001\"\r\n                            },\r\n                            \"Code\": \"E01\",\r\n                            \"Lat\": 38.9064368149,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0219143803,\r\n                            \"Name\": \"Mt Vernon Sq\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"1701 8th St. NW\",\r\n                                \"Zip\": \"20001\"\r\n                            },\r\n                            \"Code\": \"E02\",\r\n                            \"Lat\": 38.9134768711,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0219117007,\r\n                            \"Name\": \"Shaw\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"1240 U Street NW\",\r\n                                \"Zip\": \"20009\"\r\n                            },\r\n                            \"Code\": \"E03\",\r\n                            \"Lat\": 38.9170023992,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0274958929,\r\n                            \"Name\": \"U Street\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"3030 14th St. NW\",\r\n                                \"Zip\": \"20009\"\r\n                            },\r\n                            \"Code\": \"E04\",\r\n                            \"Lat\": 38.9278379675,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0325521177,\r\n                            \"Name\": \"Columbia Heights\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"3700 Georgia Avenue NW\",\r\n                                \"Zip\": \"20010\"\r\n                            },\r\n                            \"Code\": \"E05\",\r\n                            \"Lat\": 38.9374346301,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.023460904,\r\n                            \"Name\": \"Georgia Avenue\",\r\n                            \"StationTogether1\": \"\",\r\n                            \"StationTogether2\": \"\"\r\n                        },\r\n                        {\r\n                            \"Address\": {\r\n                                \"City\": \"Washington\",\r\n                                \"State\": \"DC\",\r\n                                \"Street\": \"550 Galloway Street NE\",\r\n                                \"Zip\": \"20011\"\r\n                            },\r\n                            \"Code\": \"E06\",\r\n                            \"Lat\": 38.9518467675,\r\n                            \"LineCode1\": \"GR\",\r\n                            \"LineCode2\": \"YL\",\r\n                            \"LineCode3\": null,\r\n                            \"LineCode4\": null,\r\n                            \"Lon\": -77.0022030768,\r\n                            \"Name\": \"Fort Totten\",\r\n                            \"StationTogether1\": \"B06\",\r\n                            \"StationTogether2\": \"\"\r\n                        }\r\n                    ]\r\n                }\r\n            };\r\n            this.createMap();\r\n        }\r\n        return ModelStations;\r\n    })();\r\n    exports.ModelStations = ModelStations;\r\n    ;\r\n});\r\n//# sourceMappingURL=ModelStations.js.map;\n",
    "/// <reference path=\"../../../typings/es6-promise/es6-promise.d.ts\"/>\r\n'use strict';\r\ndefine('app/MetroServices',[\"require\", \"exports\", '../lib/mtx3/mtx3'], function (require, exports, mtx3_1) {\r\n    var MetroServices = (function () {\r\n        function MetroServices() {\r\n        }\r\n        MetroServices.predictions = function () {\r\n            return new Promise(function (resolve, reject) {\r\n                mtx3_1.Ajax.get(MetroServices.URL_API_PREDICTION)\r\n                    .then(function (result) {\r\n                    resolve({ predictions: result.data.Trains });\r\n                }, function (error) {\r\n                    reject(error);\r\n                });\r\n            });\r\n        };\r\n        MetroServices.incidents = function () {\r\n            return new Promise(function (resolve, reject) {\r\n                mtx3_1.Ajax.get(MetroServices.URL_API_INCIDENTS)\r\n                    .then(function (result) {\r\n                    resolve({ incidents: result.data.Incidents });\r\n                }, function (error) {\r\n                    reject(error);\r\n                });\r\n            });\r\n        };\r\n        MetroServices.URL_API = 'https://api.wmata.com/';\r\n        MetroServices.URL_API_KEY = 'jv48qqz457nwk2xrh8fffzjz';\r\n        MetroServices.URL_API_PREDICTION = MetroServices.URL_API +\r\n            'StationPrediction.svc/json/GetPrediction/All?api_key=' + MetroServices.URL_API_KEY;\r\n        MetroServices.URL_API_INCIDENTS = MetroServices.URL_API +\r\n            'Incidents.svc/json/Incidents?api_key=' + MetroServices.URL_API_KEY;\r\n        return MetroServices;\r\n    })();\r\n    exports.MetroServices = MetroServices;\r\n    ;\r\n});\r\n//# sourceMappingURL=MetroServices.js.map;\n",
    "'use strict';\r\ndefine('app/MetroController',[\"require\", \"exports\", './views/IncidentsView', './views/MainView', './views/MapView', './views/MenuView', './models/ModelIncidents', './models/ModelLines', './models/ModelPredictions', './models/ModelStations', './MetroServices', '../lib/mtx3/mtx3'], function (require, exports, IncidentsView_1, MainView_1, MapView_1, MenuView_1, ModelIncidents_1, ModelLines_1, ModelPredictions_1, ModelStations_1, MetroServices_1, mtx3_1) {\r\n    var MetroController = (function () {\r\n        function MetroController() {\r\n            var _this = this;\r\n            this._interval = MetroController.PREDICTION_INTERVER;\r\n            this._intervalId = 0;\r\n            this._mql = window.matchMedia('(min-width: 424px)');\r\n            this._isDesktop = this._mql.matches;\r\n            this.handleMatchMedia = function (mql) {\r\n                console.log('XXX match media...');\r\n                if (mql.matches !== _this._isDesktop) {\r\n                    _this._mView.displayMode(_this._mql.matches);\r\n                }\r\n                _this._isDesktop = _this._mql.matches;\r\n            };\r\n            this._container = document.querySelector('.mtx3-metro');\r\n            this._mi = new ModelIncidents_1.ModelIncidents();\r\n            this._ml = new ModelLines_1.ModelLines();\r\n            this._mp = new ModelPredictions_1.ModelPredictions();\r\n            this._ms = new ModelStations_1.ModelStations();\r\n        }\r\n        MetroController.prototype.render = function () {\r\n            new MenuView_1.MenuView()\r\n                .container(this._container.querySelector('.section-menu'))\r\n                .render()\r\n                .start();\r\n            this._mView = new MainView_1.MainView()\r\n                .displayMode(this._isDesktop)\r\n                .metroIncidents(this._mi)\r\n                .metroPredictions(this._mp)\r\n                .container(this._container)\r\n                .metroLines(this._ml)\r\n                .metroStations(this._ms)\r\n                .render();\r\n            new MapView_1.MapView()\r\n                .pdfFile('images/color_map_silverline.pdf')\r\n                .container(this._container.querySelector('.section-map'))\r\n                .render()\r\n                .start();\r\n            this._iView = new IncidentsView_1.IncidentsView()\r\n                .metroLines(this._ml)\r\n                .metroStations(this._ms)\r\n                .container(this._container.querySelector('.section-alerts .incidents-container'))\r\n                .render();\r\n            this._mql.addListener(this.handleMatchMedia);\r\n            return this;\r\n        };\r\n        MetroController.prototype.start = function () {\r\n            var _this = this;\r\n            var load = function () {\r\n                MetroServices_1.MetroServices.predictions()\r\n                    .then(function (predictions) {\r\n                    _this._mp.active = predictions;\r\n                }, function (error) {\r\n                    console.error('error loading predictions:', error);\r\n                });\r\n                MetroServices_1.MetroServices.incidents()\r\n                    .then(function (incidents) {\r\n                    _this._mi.active = incidents;\r\n                }, function (error) {\r\n                    console.error('error loading incidents:', error);\r\n                });\r\n            };\r\n            this._iView.start();\r\n            this._mView.start();\r\n            this._ml.active = { code: 'BL', name: 'Blue' };\r\n            mtx3_1.Observer.monitor(this._mi, 'active', this._iView, this._iView.updateIncidents);\r\n            load();\r\n            this._intervalId = setInterval(function () {\r\n                load();\r\n            }, this._interval);\r\n            return this;\r\n        };\r\n        MetroController.PREDICTION_INTERVER = 1000 * 15;\r\n        return MetroController;\r\n    })();\r\n    exports.MetroController = MetroController;\r\n    ;\r\n});\r\n//# sourceMappingURL=MetroController.js.map;\n",
    "/// <reference path=\"../../typings/requirejs/require.d.ts\"/>\r\n'use strict';\r\ndefine('main',[\"require\", \"exports\", './app/MetroController'], function (require, exports, MetroController_1) {\r\n    requirejs.config({\r\n        baseUrl: '.',\r\n        paths: {\r\n            pdfjs: 'javascript/lib/pdf.combined',\r\n        },\r\n        shim: {\r\n            pdfjs: {\r\n                exports: 'PDFJS'\r\n            }\r\n        }\r\n    });\r\n    require(['pdfjs'], function () {\r\n        var domReady = function () {\r\n            console.log('XXX READY!!!');\r\n            new MetroController_1.MetroController()\r\n                .render()\r\n                .start();\r\n        };\r\n        if (document.readyState !== 'loading') {\r\n            domReady();\r\n            return;\r\n        }\r\n        document.addEventListener('DOMContentLoaded', function () {\r\n            domReady();\r\n            document.removeEventListener('DOMContentLoaded', this, false);\r\n        }, false);\r\n    });\r\n});\r\n//# sourceMappingURL=main.js.map;\n"
  ]
}